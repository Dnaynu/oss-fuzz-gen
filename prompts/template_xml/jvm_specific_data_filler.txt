<data_mapping>
Here is a markdown table showing methods should be used for generate random data of some argument types:
  | Argument types | Methods for generating random data |
  | int or java.lang.Integer | FuzzedDataProvider::consumeInt() or FuzzedDataProvider::consumeInt(int, int) |
  | int[] | FuzzedDataProvider::consumeInts(int) |
  | java.lang.Integer[] | org.apache.commons.lang3.ArrayUtils::toObject(int[]) |
  | boolean or java.lang.Boolean | FuzzedDataProvider::consumeBoolean() |
  | boolean[] | FuzzedDataProvider::consumeBooleans(int) |
  | java.lang.Boolean[] | org.apache.commons.lang3.ArrayUtils::toObject(boolean[]) |
  | byte or java.lang.Byte | FuzzedDataProvider::consumeByte() or FuzzedDataProvider::consumeByte(byte,byte) |
  | byte[] | FuzzedDataProvider::consumeBytes(int) or FuzzedDataProvider::consumeRemainingAsBytes() |
  | java.lang.Byte[] | org.apache.commons.lang3.ArrayUtils::toObject(byte[]) |
  | short or java.lang.Short | FuzzedDataProvider::consumeShort() or FuzzedDataProvider::consumeShort(short, short) |
  | short[] | FuzzedDataProvider::consumeShorts(int) |
  | java.lang.Short[] | org.apache.commons.lang3.ArrayUtils::toObject(short[]) |
  | long or java.lang.Long | FuzzedDataProvider::consumeLong() or FuzzedDataProvider::consumeLong(long, long) |
  | long[] | FuzzedDataProvider::consumeLongs(int) |
  | java.lang.Long[] | org.apache.commons.lang3.ArrayUtils::toObject(long[]) |
  | float or java.lang.Float | FuzzedDataProvider::consumeFloat() or FuzzedDataProvider::consumeRegularFloat() or FuzzedDataProvider::consumeRegularFloat(float, float) or FuzzedDataProvider::consumeProbabilityFloat() |
  | double or java.lang.Double | FuzzedDataProvider::consumeDouble() or FuzzedDataProvider::consumeRegularDouble() or FuzzedDataProvider::consumeRegularDouble(double, double) or FuzzedDataProvider::consumeProbabilityDouble() |
  | char or java.lang.Character | FuzzedDataProvider::consumeChar() or FuzzedDataProvider::consumeCharNoSurrogates() or FuzzedDataProvider::consumeChar(char, char) |
  | java.lang.String or java.lang.CharSequence | FuzzedDataProvider::consumeString(int) or FuzzedDataProvider::consumeAsciiString(int) or FuzzedDataProvider::consumeRemainingAsString() or FuzzedDataProvider::consumeRemainingAsAsciiString() |

If the arugment types are found in the first column of the above table, please use one of the methods in the second column of the same row for creating random data of that argument type.
</data_mapping>
