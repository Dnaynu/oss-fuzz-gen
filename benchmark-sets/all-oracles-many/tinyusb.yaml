"functions":
- "name": "tcp_listen_with_backlog"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "char"
  "return_type": "void"
  "signature": "struct tcp_pcb * tcp_listen_with_backlog(struct tcp_pcb *, u8_t)"
- "name": "netif_add_noaddr"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "struct netif * netif_add_noaddr(struct netif *, void *, netif_init_fn, netif_input_fn)"
- "name": "netif_set_ipaddr"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void netif_set_ipaddr(struct netif *, const ip4_addr_t *)"
- "name": "netif_set_addr"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void netif_set_addr(struct netif *, const ip4_addr_t *, const ip4_addr_t *, const ip4_addr_t *)"
- "name": "tcp_connect"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "short"
  - "name": ""
    "type": "bool "
  "return_type": "char"
  "signature": "err_t tcp_connect(struct tcp_pcb *, const ip_addr_t *, u16_t, tcp_connected_fn)"
- "name": "netif_input"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "char"
  "signature": "err_t netif_input(struct pbuf *, struct netif *)"
- "name": "tcp_recv_null"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "char"
  "return_type": "char"
  "signature": "err_t tcp_recv_null(void *, struct tcp_pcb *, struct pbuf *, err_t)"
- "name": "tcp_keepalive"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "char"
  "signature": "err_t tcp_keepalive(struct tcp_pcb *)"
- "name": "tcp_input"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void tcp_input(struct pbuf *, struct netif *)"
- "name": "tcp_shutdown"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  "return_type": "char"
  "signature": "err_t tcp_shutdown(struct tcp_pcb *, int, int)"
- "name": "tcp_rexmit_rto_commit"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void tcp_rexmit_rto_commit(struct tcp_pcb *)"
- "name": "tcp_send_empty_ack"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "char"
  "signature": "err_t tcp_send_empty_ack(struct tcp_pcb *)"
- "name": "dhserv_init"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "char"
  "signature": "err_t dhserv_init(const dhcp_config_t *)"
- "name": "tcp_rst"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "short"
  - "name": ""
    "type": "short"
  "return_type": "void"
  "signature": "void tcp_rst(const struct tcp_pcb *, u32_t, u32_t, const ip_addr_t *, const ip_addr_t *, u16_t, u16_t)"
- "name": "tcp_output"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "char"
  "signature": "err_t tcp_output(struct tcp_pcb *)"
- "name": "tcp_new_ip_type"
  "params":
  - "name": ""
    "type": "char"
  "return_type": "void"
  "signature": "struct tcp_pcb * tcp_new_ip_type(u8_t)"
- "name": "tcp_process_refused_data"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "char"
  "signature": "err_t tcp_process_refused_data(struct tcp_pcb *)"
- "name": "etharp_output"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "char"
  "signature": "err_t etharp_output(struct netif *, struct pbuf *, const ip4_addr_t *)"
- "name": "tcp_listen_with_backlog_and_err"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "char"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "struct tcp_pcb * tcp_listen_with_backlog_and_err(struct tcp_pcb *, u8_t, err_t *)"
- "name": "udp_send"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "char"
  "signature": "err_t udp_send(struct udp_pcb *, struct pbuf *)"
- "name": "tcp_pcb_remove"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void tcp_pcb_remove(struct tcp_pcb **, struct tcp_pcb *)"
- "name": "tcp_zero_window_probe"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "char"
  "signature": "err_t tcp_zero_window_probe(struct tcp_pcb *)"
- "name": "netif_add"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "struct netif * netif_add(struct netif *, const ip4_addr_t *, const ip4_addr_t *, const ip4_addr_t *, void *, netif_init_fn, netif_input_fn)"
- "name": "dnserv_init"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "short"
  - "name": ""
    "type": "bool "
  "return_type": "char"
  "signature": "err_t dnserv_init(const ip_addr_t *, uint16_t, dns_query_proc_t)"
- "name": "udp_sendto_if_src"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "short"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "char"
  "signature": "err_t udp_sendto_if_src(struct udp_pcb *, struct pbuf *, const ip_addr_t *, u16_t, struct netif *, const ip_addr_t *)"
- "name": "tcp_netif_ip_addr_changed"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void tcp_netif_ip_addr_changed(const ip_addr_t *, const ip_addr_t *)"
- "name": "ip4_reass"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "struct pbuf * ip4_reass(struct pbuf *)"
- "name": "netif_remove"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void netif_remove(struct netif *)"
"language": "c++"
"project": "tinyusb"
"target_name": "/src/tinyusb/test/fuzz/device/cdc/src/fuzz.cc"
"target_path": "/src/tinyusb/test/fuzz/device/cdc/src/fuzz.cc"
"test_files":
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/dhcp/test_dhcp.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/etharp/test_etharp.c"
- "test_file_path": "/src/tinyusb/test/unit-test/vendor/ceedling/vendor/unity/src/unity.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/core/test_def.c"
- "test_file_path": "/src/tinyusb/test/unit-test/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/src/foo.c"
- "test_file_path": "/src/tinyusb/test/unit-test/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_foo.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/sockets/sockets_stresstest.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/core/test_netif.c"
- "test_file_path": "/src/tinyusb/test/unit-test/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/test/test_event_processor.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/tcp/test_tcp_oos.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/tcp/test_tcp.c"
- "test_file_path": "/src/tinyusb/test/unit-test/test/device/msc/test_msc_device.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/core/test_timers.c"
- "test_file_path": "/src/tinyusb/test/unit-test/test/device/usbd/test_usbd.c"
- "test_file_path": "/src/tinyusb/test/unit-test/test/test_fifo.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/core/test_mem.c"
- "test_file_path": "/src/tinyusb/test/unit-test/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/src/display.c"
- "test_file_path": "/src/tinyusb/test/unit-test/vendor/ceedling/vendor/c_exception/lib/CException.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/lwip_unittests.c"
- "test_file_path": "/src/tinyusb/test/unit-test/vendor/ceedling/vendor/cmock/src/cmock.c"
- "test_file_path": "/src/tinyusb/test/unit-test/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/src/subfolder/zzz.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/ip4/test_ip4.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/mqtt/test_mqtt.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/core/test_pbuf.c"
- "test_file_path": "/src/tinyusb/test/unit-test/test/test_common_func.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/ip6/test_ip6.c"
- "test_file_path": "/src/tinyusb/test/unit-test/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/src/event_processor.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/api/test_sockets.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/udp/test_udp.c"
- "test_file_path": "/src/tinyusb/lib/lwip/test/unit/mdns/test_mdns.c"
- "test_file_path": "/src/tinyusb/test/unit-test/vendor/ceedling/plugins/fake_function_framework/examples/fff_example/src/bar.c"
