"functions":
- "name": "__kmpc_dispatch_init_8"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "void __kmpc_dispatch_init_8(ident_t *, kmp_int32, DW_TAG_enumeration_typesched_type, kmp_int64, kmp_int64, kmp_int64, kmp_int64)"
- "name": "_ZNK14kmp_topology_t5printEPKc"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void kmp_topology_t::print(const char *)"
- "name": "__kmpc_dispatch_init_4u"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "void __kmpc_dispatch_init_4u(ident_t *, kmp_int32, DW_TAG_enumeration_typesched_type, kmp_uint32, kmp_uint32, kmp_int32, kmp_int32)"
- "name": "__kmpc_taskloop_5"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void __kmpc_taskloop_5(ident_t *, int, kmp_task_t *, int, kmp_uint64 *, kmp_uint64 *, kmp_int64, int, int, kmp_uint64, int, void *)"
- "name": "_ZN8rawspeed15VC5Decompressor7Wavelet18combineLowHighPassENS_10Array2DRefIKsEES4_ibb"
  "params":
  - "name": "low"
    "type": "bool "
  - "name": "high"
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool"
  - "name": ""
    "type": "bool"
  "return_type": "void"
  "signature": "struct BandData rawspeed::VC5Decompressor::Wavelet::combineLowHighPass(const Array2DRef<const short>, const Array2DRef<const short>, int, bool, bool)"
- "name": "kmpc_set_defaults"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void kmpc_set_defaults(const char *)"
- "name": "_ZN8rawspeed15RawImageDataU1615scaleBlackWhiteEv"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void rawspeed::RawImageDataU16::scaleBlackWhite()"
- "name": "_ZN12_GLOBAL__N_116itanium_demangle22AbstractManglingParserINS0_14ManglingParserINS_16DefaultAllocatorEEES3_E9parseExprEv"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "Node * (anonymous namespace)::itanium_demangle::parseExpr(struct AbstractManglingParser<(anonymous namespace)::itanium_demangle::ManglingParser<(anonymous namespace)::DefaultAllocator>, (anonymous namespace)::DefaultAllocator> *)"
- "name": "__kmp_env_get"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "char * __kmp_env_get(const char *)"
- "name": "_ZN8rawspeed8ErrorLog8setErrorERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void rawspeed::ErrorLog::setError(const string &)"
- "name": "_ZN8rawspeed10Cr2Decoder15sRawInterpolateEv"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void rawspeed::Cr2Decoder::sRawInterpolate()"
- "name": "_ZNK8rawspeed10NefDecoder15getExtendedModeERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "string rawspeed::NefDecoder::getExtendedMode(const string &)"
- "name": "__kmpc_dispatch_init_4"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "void __kmpc_dispatch_init_4(ident_t *, kmp_int32, DW_TAG_enumeration_typesched_type, kmp_int32, kmp_int32, kmp_int32, kmp_int32)"
- "name": "_ZN8rawspeed10DngDecoder17decodeRawInternalEv"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "RawImage rawspeed::DngDecoder::decodeRawInternal()"
- "name": "_ZN8rawspeed15VC5Decompressor7Wavelet15reconstructPassENS_10Array2DRefIKsEES4_"
  "params":
  - "name": "high"
    "type": "bool "
  - "name": "low"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "struct BandData rawspeed::VC5Decompressor::Wavelet::reconstructPass(const Array2DRef<const short>, const Array2DRef<const short>)"
- "name": "__kmp_msg_error_mesg"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "kmp_msg_t __kmp_msg_error_mesg(const char *)"
- "name": "__kmp_aux_dispatch_init_4u"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "void __kmp_aux_dispatch_init_4u(ident_t *, kmp_int32, DW_TAG_enumeration_typesched_type, kmp_uint32, kmp_uint32, kmp_int32, kmp_int32, int)"
- "name": "_ZN8rawspeed10ByteStream10skipPrefixENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": "prefix"
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "bool"
  "signature": "bool rawspeed::ByteStream::skipPrefix(string_view)"
- "name": "__kmpc_fork_teams"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void __kmpc_fork_teams(ident_t *, kmp_int32, kmpc_micro, void)"
- "name": "__kmpc_dispatch_init_8u"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "void __kmpc_dispatch_init_8u(ident_t *, kmp_int32, DW_TAG_enumeration_typesched_type, kmp_uint64, kmp_uint64, kmp_int64, kmp_int64)"
- "name": "__kmp_aux_dispatch_init_8"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "void __kmp_aux_dispatch_init_8(ident_t *, kmp_int32, DW_TAG_enumeration_typesched_type, kmp_int64, kmp_int64, kmp_int64, kmp_int64, int)"
- "name": "__kmpc_fork_call_if"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void __kmpc_fork_call_if(ident_t *, kmp_int32, kmpc_micro, kmp_int32, void *)"
- "name": "__kmpc_reduce"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "kmp_int32 __kmpc_reduce(ident_t *, kmp_int32, kmp_int32, size_t, void *, DW_TAG_subroutine_typeInfinite loop *, kmp_critical_name *)"
- "name": "__kmp_invoke_teams_master"
  "params":
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int __kmp_invoke_teams_master(int)"
- "name": "_ZNK8rawspeed10ByteStream9hasPrefixENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "bool"
  "signature": "bool rawspeed::ByteStream::hasPrefix(string_view)"
- "name": "__kmpc_barrier_master_nowait"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "kmp_int32 __kmpc_barrier_master_nowait(ident_t *, kmp_int32)"
- "name": "__kmp_affinity_determine_capable"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void __kmp_affinity_determine_capable(const char *)"
- "name": "_ZNK8rawspeed15VC5Decompressor24combineFinalLowpassBandsEv"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void rawspeed::VC5Decompressor::combineFinalLowpassBands()"
- "name": "_ZN17KMPNativeAffinity17determine_capableEPKc"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void KMPNativeAffinity::determine_capable(const char *)"
- "name": "__kmpc_taskloop"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void __kmpc_taskloop(ident_t *, int, kmp_task_t *, int, kmp_uint64 *, kmp_uint64 *, kmp_int64, int, int, kmp_uint64, void *)"
- "name": "__kmpc_reduce_nowait"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "kmp_int32 __kmpc_reduce_nowait(ident_t *, kmp_int32, kmp_int32, size_t, void *, DW_TAG_subroutine_typeInfinite loop *, kmp_critical_name *)"
- "name": "__kmpc_omp_target_task_alloc"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "kmp_task_t * __kmpc_omp_target_task_alloc(ident_t *, kmp_int32, kmp_int32, size_t, size_t, kmp_routine_entry_t, kmp_int64)"
- "name": "_ZN8rawspeed19Cr2sRawInterpolator11interpolateEi"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "void rawspeed::Cr2sRawInterpolator::interpolate(int)"
- "name": "_ZN8rawspeed17RawImageDataFloat15scaleBlackWhiteEv"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void rawspeed::RawImageDataFloat::scaleBlackWhite()"
- "name": "__kmp_aux_dispatch_init_4"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "void __kmp_aux_dispatch_init_4(ident_t *, kmp_int32, DW_TAG_enumeration_typesched_type, kmp_int32, kmp_int32, kmp_int32, kmp_int32, int)"
- "name": "__kmp_teams_master"
  "params":
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "void __kmp_teams_master(int)"
"language": "c++"
"project": "librawspeed"
"target_name": "/src/librawspeed/fuzz/librawspeed/codes/PrefixCodeDecoder/Dual.cpp"
"target_path": "/src/librawspeed/fuzz/librawspeed/codes/PrefixCodeDecoder/Dual.cpp"
"test_files":
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/support/test.support/test_check_assertion.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/support/test.support/test_macros_header.no_rtti.verify.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/input.output/stream.buffers/streambuf.reqts/tested_elsewhere.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxxabi/test/guard_test_basic.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/libcxx/utilities/meta/stress_tests/stress_test_metafunctions.sh.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxxabi/test/backtrace_test.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/atomics/atomics.flag/atomic_flag_test_and_set_explicit.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/utilities/tuple/tuple.tuple/tuple.cnstr/test_lazy_sfinae.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/localization/locale.categories/category.messages/locale.messages/locale.messages.members/not_testable.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/input.output/iostreams.requirements/iostream.limits.imbue/tested_elsewhere.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxxabi/test/test_vector1.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxxabi/test/guard_threaded_test.pass.cpp"
- "test_file_path": "/usr/share/cmake-3.30/Modules/FindMPI/test_mpi.c"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxxabi/test/test_aux_runtime_op_array_new.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/atomics/atomics.flag/test_and_set.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/support/test.support/test_convertible_header.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/support/test.support/test_proxy.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/libcxx/utilities/meta/stress_tests/stress_test_is_same.sh.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/input.output/filesystems/fs.error.report/tested_elsewhere.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/thread/thread.threads/thread.thread.this/sleep_for_tested_elsewhere.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/numerics/numarray/class.slice/slice.access/tested_elsewhere.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/input.output/filesystems/class.path/path.member/path.query/tested_in_path_decompose.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/re/re.alg/re.alg.replace/test2.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/localization/locale.categories/category.ctype/facet.ctype.special/facet.ctype.char.virtuals/tested_elsewhere.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/re/re.regex/re.regex.operations/tested_elsewhere.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxxabi/test/cxa_thread_atexit_test.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/containers/sequences/array/array.zero/tested_elsewhere.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/input.output/filesystems/class.path/path.nonmember/hash_value_tested_elswhere.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/localization/locale.categories/category.numeric/locale.nm.put/facet.num.put.virtuals/tested_elsewhere.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/re/re.alg/re.alg.replace/test4.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/iterators/predef.iterators/insert.iterators/insert.iter.ops/insert.iter.cons/test.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/input.output/iostream.format/input.streams/istream.formatted/istream.formatted.reqmts/tested_elsewhere.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/utilities/charconv/charconv.msvc/test.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/localization/locale.categories/category.numeric/locale.num.get/facet.num.get.members/test_min_max.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxxabi/test/test_demangle.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/localization/locale.categories/category.ctype/locale.ctype/locale.ctype.virtuals/tested_elsewhere.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/re/re.alg/re.alg.replace/test1.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/re/re.alg/re.alg.replace/test6.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/localization/locale.categories/category.monetary/locale.money.put/locale.money.put.virtuals/tested_elsewhere.pass.cpp"
- "test_file_path": "/src/llvm-project-16.0.6.src/libcxx/test/std/localization/locale.categories/category.monetary/locale.money.get/locale.money.get.virtuals/tested_elsewhere.pass.cpp"
