"functions":
- "name": "_ZN8simdjson13validate_utf8EPKcm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "bool"
  "signature": "bool simdjson::validate_utf8(const char *, size_t)"
- "name": "_ZNK8simdjson8internal49detect_best_supported_implementation_on_first_use11descriptionEv"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "string simdjson::internal::detect_best_supported_implementation_on_first_use::description()"
- "name": "_ZN8simdjson7icelake25dom_parser_implementation6stage1EPKhmNS_11stage1_modeE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::icelake::dom_parser_implementation::stage1(const uint8_t *, size_t, DW_TAG_enumeration_typestage1_mode)"
- "name": "_ZN8simdjson8westmere25dom_parser_implementation11stage2_nextERNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::westmere::dom_parser_implementation::stage2_next(document &)"
- "name": "_ZNK8simdjson8westmere25dom_parser_implementation19parse_wobbly_stringEPKhPh"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "uint8_t * simdjson::westmere::dom_parser_implementation::parse_wobbly_string(const uint8_t *, uint8_t *)"
- "name": "_ZNK8simdjson7icelake14implementation32create_dom_parser_implementationEmmRNSt3__110unique_ptrINS_8internal25dom_parser_implementationENS2_14default_deleteIS5_EEEE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::icelake::implementation::create_dom_parser_implementation(size_t, size_t, unique_ptr<simdjson::internal::dom_parser_implementation, std::__1::default_delete<simdjson::internal::dom_parser_implementation> > &)"
- "name": "_ZN8simdjson8internal10from_charsEPKcS2_"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "double"
  "signature": "double simdjson::internal::from_chars(const char *, const char *)"
- "name": "_ZN8simdjson6minifyEPKcmPcRm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::minify(const char *, size_t, char *, size_t &)"
- "name": "_ZN8simdjson7haswell25dom_parser_implementation5parseEPKhmRNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::haswell::dom_parser_implementation::parse(const uint8_t *, size_t, document &)"
- "name": "_ZNK8simdjson8westmere25dom_parser_implementation12parse_stringEPKhPhb"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool"
  "return_type": "void"
  "signature": "uint8_t * simdjson::westmere::dom_parser_implementation::parse_string(const uint8_t *, uint8_t *, bool)"
- "name": "_ZN8simdjson8fallback25dom_parser_implementation11stage2_nextERNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::fallback::dom_parser_implementation::stage2_next(document &)"
- "name": "_ZNK8simdjson8fallback25dom_parser_implementation12parse_stringEPKhPhb"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool"
  "return_type": "void"
  "signature": "uint8_t * simdjson::fallback::dom_parser_implementation::parse_string(const uint8_t *, uint8_t *, bool)"
- "name": "_ZNK8simdjson8internal49detect_best_supported_implementation_on_first_use13validate_utf8EPKcm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "bool"
  "signature": "bool simdjson::internal::detect_best_supported_implementation_on_first_use::validate_utf8(const char *, size_t)"
- "name": "_ZNK8simdjson7icelake14implementation6minifyEPKhmPhRm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::icelake::implementation::minify(const uint8_t *, size_t, uint8_t *, size_t &)"
- "name": "_ZN8simdjson8fallback25dom_parser_implementation5parseEPKhmRNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::fallback::dom_parser_implementation::parse(const uint8_t *, size_t, document &)"
- "name": "_ZN8simdjson7icelake25dom_parser_implementation11stage2_nextERNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::icelake::dom_parser_implementation::stage2_next(document &)"
- "name": "_ZN8simdjson7icelake25dom_parser_implementation6stage2ERNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::icelake::dom_parser_implementation::stage2(document &)"
- "name": "_ZNK8simdjson7icelake14implementation13validate_utf8EPKcm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "bool"
  "signature": "bool simdjson::icelake::implementation::validate_utf8(const char *, size_t)"
- "name": "_ZNK8simdjson8fallback25dom_parser_implementation19parse_wobbly_stringEPKhPh"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "uint8_t * simdjson::fallback::dom_parser_implementation::parse_wobbly_string(const uint8_t *, uint8_t *)"
- "name": "_ZNK8simdjson8internal49detect_best_supported_implementation_on_first_use25required_instruction_setsEv"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "uint32_t simdjson::internal::detect_best_supported_implementation_on_first_use::required_instruction_sets()"
- "name": "_ZN8simdjson7icelake12_GLOBAL__N_16stage121generic_validate_utf8EPKcm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "bool"
  "signature": "bool simdjson::icelake::(anonymous namespace)::stage1::generic_validate_utf8(const char *, size_t)"
- "name": "_ZNK8simdjson7icelake25dom_parser_implementation12parse_stringEPKhPhb"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool"
  "return_type": "void"
  "signature": "uint8_t * simdjson::icelake::dom_parser_implementation::parse_string(const uint8_t *, uint8_t *, bool)"
- "name": "_ZN8simdjson8westmere25dom_parser_implementation5parseEPKhmRNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::westmere::dom_parser_implementation::parse(const uint8_t *, size_t, document &)"
- "name": "_ZNK8simdjson8internal49detect_best_supported_implementation_on_first_use4nameEv"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "string simdjson::internal::detect_best_supported_implementation_on_first_use::name()"
- "name": "_ZNK8simdjson7icelake25dom_parser_implementation19parse_wobbly_stringEPKhPh"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "uint8_t * simdjson::icelake::dom_parser_implementation::parse_wobbly_string(const uint8_t *, uint8_t *)"
- "name": "_ZNK8simdjson7haswell25dom_parser_implementation19parse_wobbly_stringEPKhPh"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "uint8_t * simdjson::haswell::dom_parser_implementation::parse_wobbly_string(const uint8_t *, uint8_t *)"
- "name": "_ZNK8simdjson8internal29available_implementation_list4sizeEv"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "size_t"
  "signature": "size_t simdjson::internal::available_implementation_list::size()"
- "name": "_ZN8simdjson7haswell25dom_parser_implementation11stage2_nextERNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::haswell::dom_parser_implementation::stage2_next(document &)"
- "name": "_ZN8simdjson7icelake25dom_parser_implementation5parseEPKhmRNS_3dom8documentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::icelake::dom_parser_implementation::parse(const uint8_t *, size_t, document &)"
- "name": "_ZN8simdjson7icelake13numberparsingL18slow_float_parsingEPKhPd"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::icelake::numberparsing::slow_float_parsing(const uint8_t *, double *)"
- "name": "_ZNK8simdjson8internal49detect_best_supported_implementation_on_first_use6minifyEPKhmPhRm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "DW_TAG_enumeration_typeerror_code simdjson::internal::detect_best_supported_implementation_on_first_use::minify(const uint8_t *, size_t, uint8_t *, size_t &)"
- "name": "_ZNK8simdjson8internal29available_implementation_listixERKNSt3__117basic_string_viewIcNS2_11char_traitsIcEEEE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "const implementation * simdjson::internal::available_implementation_list::operator[](const string_view &)"
- "name": "_ZN8simdjson7icelake13numberparsing12_GLOBAL__N_120parse_float_fallbackEPKhPd"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "bool"
  "signature": "bool simdjson::icelake::numberparsing::(anonymous namespace)::parse_float_fallback(const uint8_t *, double *)"
"language": "c++"
"project": "simdjson"
"target_name": "fuzz_padded"
"target_path": "/src/simdjson/fuzz/fuzz_padded.cpp"
"test_files":
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_json_path_tests.cpp"
- "test_file_path": "/src/simdjson/tests/dom/random_string_number_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_compilation_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_object_error_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_scalar_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_array_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_wrong_type_error_tests.cpp"
- "test_file_path": "/src/simdjson/tests/dom/trivially_copyable_test.cpp"
- "test_file_path": "/src/simdjson/tests/padded_string_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_document_stream_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_object_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_tostring_tests.cpp"
- "test_file_path": "/src/simdjson/tests/prettify_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_misc_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_object_find_field_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_parse_api_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_error_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_json_pointer_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_ordering_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_number_tests.cpp"
- "test_file_path": "/src/simdjson/tests/unicode_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_object_index_tests.cpp"
- "test_file_path": "/src/simdjson/tests/dom/document_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_log_tests.cpp"
- "test_file_path": "/src/simdjson/tests/minify_tests.cpp"
- "test_file_path": "/src/simdjson/tests/dom/integer_tests.cpp"
- "test_file_path": "/src/simdjson/tests/dom/errortests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_log_error_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_array_error_tests.cpp"
- "test_file_path": "/src/simdjson/tests/dom/singleheadertest.cpp"
- "test_file_path": "/src/simdjson/tests/dom/parse_many_test.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_key_string_tests.cpp"
- "test_file_path": "/src/simdjson/tests/dom/basictests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_number_in_string_tests.cpp"
- "test_file_path": "/src/simdjson/tests/compilation_failure_tests/example_compiletest.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_active_tests.cpp"
- "test_file_path": "/src/simdjson/tests/dom/document_stream_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_twitter_tests.cpp"
- "test_file_path": "/src/simdjson/tests/ondemand/ondemand_error_location_tests.cpp"
