"functions":
- "name": "mbedtls_cipher_write_tag"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "tag"
    "type": "bool "
  - "name": "tag_len"
    "type": "size_t"
  "return_type": "int"
  "signature": "int mbedtls_cipher_write_tag(mbedtls_cipher_context_t *, unsigned char *, size_t)"
- "name": "mbedtls_cipher_check_tag"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "tag"
    "type": "bool "
  - "name": "tag_len"
    "type": "size_t"
  "return_type": "int"
  "signature": "int mbedtls_cipher_check_tag(mbedtls_cipher_context_t *, const unsigned char *, size_t)"
- "name": "kd_free"
  "params":
  - "name": "tree"
    "type": "bool "
  "return_type": "void"
  "signature": "void kd_free(struct kdtree *)"
- "name": "nheap_get_arrays"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "ndpi_knn nheap_get_arrays(t_nheap *)"
- "name": "kd_res_end"
  "params":
  - "name": "rset"
    "type": "bool "
  "return_type": "int"
  "signature": "int kd_res_end(struct kdres *)"
- "name": "mbedtls_cipher_update_ad"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "ad"
    "type": "bool "
  - "name": "ad_len"
    "type": "size_t"
  "return_type": "int"
  "signature": "int mbedtls_cipher_update_ad(mbedtls_cipher_context_t *, const unsigned char *, size_t)"
- "name": "kd_nearest"
  "params":
  - "name": "kd"
    "type": "bool "
  - "name": "pos"
    "type": "bool "
  "return_type": "void"
  "signature": "struct kdres * kd_nearest(struct kdtree *, const double *)"
- "name": "free_tree"
  "params":
  - "name": "tree"
    "type": "bool "
  "return_type": "void"
  "signature": "void free_tree(t_btree *)"
- "name": "min_dist"
  "params":
  - "name": "tree"
    "type": "bool "
  - "name": "i_node"
    "type": "int"
  - "name": "pt"
    "type": "bool "
  "return_type": "double"
  "signature": "double min_dist(t_btree *, int, double *)"
- "name": "nheap_push"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "row"
    "type": "int"
  - "name": "val"
    "type": "double"
  - "name": "i_val"
    "type": "int"
  "return_type": "int"
  "signature": "int nheap_push(t_nheap *, int, double, int)"
- "name": "free_knn"
  "params":
  - "name": "knn"
    "type": "bool "
  - "name": "row"
    "type": "int"
  "return_type": "void"
  "signature": "void free_knn(ndpi_knn, int)"
- "name": "kd_res_size"
  "params":
  - "name": "set"
    "type": "bool "
  "return_type": "int"
  "signature": "int kd_res_size(struct kdres *)"
- "name": "kd_insert"
  "params":
  - "name": "tree"
    "type": "bool "
  - "name": "pos"
    "type": "bool "
  - "name": "data"
    "type": "bool "
  "return_type": "int"
  "signature": "int kd_insert(struct kdtree *, const double *, void *)"
- "name": "libinjection_sqli_callback"
  "params":
  - "name": "sf"
    "type": "bool "
  - "name": "fn"
    "type": "bool "
  - "name": "userdata"
    "type": "bool "
  "return_type": "void"
  "signature": "void libinjection_sqli_callback(struct libinjection_sqli_state *, ptr_lookup_fn, void *)"
- "name": "libinjection_sqli_lookup_word"
  "params":
  - "name": "sql_state"
    "type": "bool "
  - "name": "lookup_type"
    "type": "int"
  - "name": "str"
    "type": "bool "
  - "name": "len"
    "type": "size_t"
  "return_type": "char"
  "signature": "char libinjection_sqli_lookup_word(struct libinjection_sqli_state *, int, const char *, size_t)"
- "name": "kd_res_item_data"
  "params":
  - "name": "set"
    "type": "bool "
  "return_type": "void"
  "signature": "void * kd_res_item_data(struct kdres *)"
- "name": "kd_res_free"
  "params":
  - "name": "rset"
    "type": "bool "
  "return_type": "void"
  "signature": "void kd_res_free(struct kdres *)"
- "name": "btree_query"
  "params":
  - "name": "b"
    "type": "bool "
  - "name": "x"
    "type": "bool "
  - "name": "n_samples"
    "type": "bool "
  - "name": "n_features"
    "type": "int"
  - "name": "k"
    "type": "int"
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "ndpi_knn btree_query(t_btree *, double **, int, int, int)"
- "name": "libinjection_sqli_get_token"
  "params":
  - "name": "sql_state"
    "type": "bool "
  - "name": "i"
    "type": "int"
  "return_type": "void"
  "signature": "struct libinjection_sqli_token * libinjection_sqli_get_token(struct libinjection_sqli_state *, int)"
- "name": "kd_data_destructor"
  "params":
  - "name": "tree"
    "type": "bool "
  - "name": "destr"
    "type": "bool "
  "return_type": "void"
  "signature": "void kd_data_destructor(struct kdtree *, DW_TAG_subroutine_typeInfinite loop *)"
- "name": "kd_clear"
  "params":
  - "name": "tree"
    "type": "bool "
  "return_type": "void"
  "signature": "void kd_clear(struct kdtree *)"
- "name": "kd_res_next"
  "params":
  - "name": "rset"
    "type": "bool "
  "return_type": "int"
  "signature": "int kd_res_next(struct kdres *)"
- "name": "kd_nearest_range"
  "params":
  - "name": "kd"
    "type": "bool "
  - "name": "pos"
    "type": "bool "
  - "name": "range"
    "type": "double"
  "return_type": "void"
  "signature": "struct kdres * kd_nearest_range(struct kdtree *, const double *, double)"
- "name": "btree_init"
  "params":
  - "name": "data"
    "type": "bool "
  - "name": "n_samples"
    "type": "int"
  - "name": "n_features"
    "type": "int"
  - "name": "leaf_size"
    "type": "int"
  "return_type": "void"
  "signature": "t_btree * btree_init(double **, int, int, int)"
- "name": "ndpi_timer_eq"
  "params":
  - "name": "a"
    "type": "bool "
  - "name": "b"
    "type": "bool "
  "return_type": "int"
  "signature": "unsigned int ndpi_timer_eq(const pkt_timeval *, const pkt_timeval *)"
- "name": "kd_res_rewind"
  "params":
  - "name": "rset"
    "type": "bool "
  "return_type": "void"
  "signature": "void kd_res_rewind(struct kdres *)"
- "name": "kd_create"
  "params":
  - "name": "k"
    "type": "int"
  "return_type": "void"
  "signature": "struct kdtree * kd_create(int)"
- "name": "free_2d_double"
  "params":
  - "name": "arr"
    "type": "bool "
  - "name": "row"
    "type": "int"
  "return_type": "void"
  "signature": "void free_2d_double(double **, int)"
- "name": "free_2d_int"
  "params":
  - "name": "arr"
    "type": "bool "
  - "name": "row"
    "type": "int"
  "return_type": "void"
  "signature": "void free_2d_int(int **, int)"
- "name": "nheap_init"
  "params":
  - "name": "n_pts"
    "type": "int"
  - "name": "n_nbrs"
    "type": "int"
  "return_type": "void"
  "signature": "t_nheap * nheap_init(int, int)"
- "name": "kd_res_item"
  "params":
  - "name": "rset"
    "type": "bool "
  - "name": "user_data"
    "type": "bool "
  "return_type": "void"
  "signature": "double * kd_res_item(struct kdres *, double **)"
"language": "c++"
"project": "ndpi"
"target_name": "fuzz_libinjection"
"target_path": "/src/ndpi/fuzz/fuzz_libinjection.c"
"test_files":
- "test_file_path": "/src/ndpi/tests/unit/unit.c"
- "test_file_path": "/src/libpcap-1.9.1/testprogs/valgrindtest.c"
- "test_file_path": "/src/ndpi/tests/dga/dga_evaluate.c"
- "test_file_path": "/src/libpcap-1.9.1/testprogs/filtertest.c"
- "test_file_path": "/src/libpcap-1.9.1/testprogs/selpolltest.c"
- "test_file_path": "/src/ndpi/tests/performance/substringsearch.c"
- "test_file_path": "/src/ndpi/example/reader_util.c"
- "test_file_path": "/src/libpcap-1.9.1/testprogs/can_set_rfmon_test.c"
- "test_file_path": "/src/ndpi/tests/performance/patriciasearch.c"
- "test_file_path": "/src/libpcap-1.9.1/testprogs/opentest.c"
- "test_file_path": "/src/ndpi/example/ndpiReader.c"
- "test_file_path": "/src/ndpi/tests/performance/gcrypt.c"
- "test_file_path": "/src/libpcap-1.9.1/testprogs/reactivatetest.c"
- "test_file_path": "/usr/share/cmake-3.16/Modules/FindMPI/test_mpi.c"
- "test_file_path": "/src/ndpi/tests/performance/strnstr.cpp"
- "test_file_path": "/src/ndpi/example/ndpiSimpleIntegration.c"
- "test_file_path": "/src/libpcap-1.9.1/testprogs/capturetest.c"
- "test_file_path": "/src/libpcap-1.9.1/testprogs/threadsignaltest.c"
- "test_file_path": "/src/libpcap-1.9.1/testprogs/findalldevstest.c"
