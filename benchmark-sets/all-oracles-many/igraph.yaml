"functions":
- "name": "htmlParseElement"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void htmlParseElement(htmlParserCtxtPtr)"
- "name": "xmlCatalogLocalResolveURI"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "xmlChar * xmlCatalogLocalResolveURI(void *, const xmlChar *)"
- "name": "xmlXIncludeProcessFlagsData"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int xmlXIncludeProcessFlagsData(xmlDocPtr, int, void *)"
- "name": "xmlNewTextReaderFilename"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "xmlTextReaderPtr xmlNewTextReaderFilename(const char *)"
- "name": "xmlTextReaderReadInnerXml"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "xmlChar * xmlTextReaderReadInnerXml(xmlTextReaderPtr)"
- "name": "xmlSchemaValPredefTypeNodeNoNorm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int xmlSchemaValPredefTypeNodeNoNorm(xmlSchemaTypePtr, const xmlChar *, xmlSchemaValPtr *, xmlNodePtr)"
- "name": "xmlValidGetValidElements"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int xmlValidGetValidElements(xmlNode *, xmlNode *, const xmlChar **, int)"
- "name": "igraph_feedback_vertex_set"
  "params":
  - "name": "graph"
    "type": "bool "
  - "name": "result"
    "type": "bool "
  - "name": "vertex_weights"
    "type": "bool "
  - "name": "algo"
    "type": "int"
  "return_type": "int"
  "signature": "igraph_error_t igraph_feedback_vertex_set(const igraph_t *, igraph_vector_int_t *, const igraph_vector_t *, igraph_fvs_algorithm_t)"
- "name": "xmlParseBalancedChunkMemoryRecover"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int xmlParseBalancedChunkMemoryRecover(xmlDocPtr, xmlSAXHandlerPtr, void *, int, const xmlChar *, xmlNodePtr *, int)"
- "name": "xmlParseBalancedChunkMemory"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int xmlParseBalancedChunkMemory(xmlDocPtr, xmlSAXHandlerPtr, void *, int, const xmlChar *, xmlNodePtr *)"
- "name": "xmlDocDumpFormatMemoryEnc"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "void xmlDocDumpFormatMemoryEnc(xmlDocPtr, xmlChar **, int *, const char *, int)"
- "name": "htmlSAXParseFile"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "htmlDocPtr htmlSAXParseFile(const char *, const char *, htmlSAXHandlerPtr, void *)"
- "name": "htmlParseDocument"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int htmlParseDocument(htmlParserCtxtPtr)"
- "name": "xmlReadDoc"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "xmlDocPtr xmlReadDoc(const xmlChar *, const char *, const char *, int)"
- "name": "xmlTextReaderSchemaValidateCtxt"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int xmlTextReaderSchemaValidateCtxt(xmlTextReaderPtr, xmlSchemaValidCtxtPtr, int)"
- "name": "xmlXIncludeProcessTreeFlagsData"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int xmlXIncludeProcessTreeFlagsData(xmlNodePtr, int, void *)"
- "name": "xmlACatalogResolvePublic"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "xmlChar * xmlACatalogResolvePublic(xmlCatalogPtr, const xmlChar *)"
- "name": "xmlTextReaderSetup"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int xmlTextReaderSetup(xmlTextReaderPtr, xmlParserInputBufferPtr, const char *, const char *, int)"
- "name": "igraph_personalized_pagerank_vs"
  "params":
  - "name": "graph"
    "type": "bool "
  - "name": "algo"
    "type": "int"
  - "name": "vector"
    "type": "bool "
  - "name": "value"
    "type": "bool "
  - "name": "vids"
    "type": "bool "
  - "name": "directed"
    "type": "bool"
  - "name": "damping"
    "type": "double"
  - "name": "reset_vids"
    "type": "bool "
  - "name": "weights"
    "type": "bool "
  - "name": "options"
    "type": "bool "
  "return_type": "int"
  "signature": "igraph_error_t igraph_personalized_pagerank_vs(const igraph_t *, igraph_pagerank_algo_t, igraph_vector_t *, igraph_real_t *, const igraph_vs_t, igraph_bool_t, igraph_real_t, igraph_vs_t, const igraph_vector_t *, igraph_arpack_options_t *)"
- "name": "xmlTextReaderRelaxNGValidateCtxt"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int xmlTextReaderRelaxNGValidateCtxt(xmlTextReaderPtr, xmlRelaxNGValidCtxtPtr, int)"
- "name": "igraph_sparsemat_arpack_rnsolve"
  "params":
  - "name": "A"
    "type": "bool "
  - "name": "options"
    "type": "bool "
  - "name": "storage"
    "type": "bool "
  - "name": "values"
    "type": "bool "
  - "name": "vectors"
    "type": "bool "
  "return_type": "int"
  "signature": "igraph_error_t igraph_sparsemat_arpack_rnsolve(const igraph_sparsemat_t *, igraph_arpack_options_t *, igraph_arpack_storage_t *, igraph_matrix_t *, igraph_matrix_t *)"
- "name": "xmlACatalogResolveSystem"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "xmlChar * xmlACatalogResolveSystem(xmlCatalogPtr, const xmlChar *)"
- "name": "igraph_arpack_rssolve"
  "params":
  - "name": "fun"
    "type": "bool "
  - "name": "extra"
    "type": "bool "
  - "name": "options"
    "type": "bool "
  - "name": "storage"
    "type": "bool "
  - "name": "values"
    "type": "bool "
  - "name": "vectors"
    "type": "bool "
  "return_type": "int"
  "signature": "igraph_error_t igraph_arpack_rssolve(igraph_arpack_function_t *, void *, igraph_arpack_options_t *, igraph_arpack_storage_t *, igraph_vector_t *, igraph_matrix_t *)"
- "name": "xmlXIncludeProcessTreeFlags"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int xmlXIncludeProcessTreeFlags(xmlNodePtr, int)"
- "name": "xmlTextReaderRelaxNGValidate"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int xmlTextReaderRelaxNGValidate(xmlTextReaderPtr, const char *)"
- "name": "xmlParseCtxtExternalEntity"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int xmlParseCtxtExternalEntity(xmlParserCtxtPtr, const xmlChar *, const xmlChar *, xmlNodePtr *)"
- "name": "xmlTextReaderReadOuterXml"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "xmlChar * xmlTextReaderReadOuterXml(xmlTextReaderPtr)"
- "name": "igraph_sparsemat_arpack_rssolve"
  "params":
  - "name": "A"
    "type": "bool "
  - "name": "options"
    "type": "bool "
  - "name": "storage"
    "type": "bool "
  - "name": "values"
    "type": "bool "
  - "name": "vectors"
    "type": "bool "
  - "name": "solvemethod"
    "type": "int"
  "return_type": "int"
  "signature": "igraph_error_t igraph_sparsemat_arpack_rssolve(const igraph_sparsemat_t *, igraph_arpack_options_t *, igraph_arpack_storage_t *, igraph_vector_t *, igraph_matrix_t *, igraph_sparsemat_solve_t)"
- "name": "htmlCreateMemoryParserCtxt"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "htmlParserCtxtPtr htmlCreateMemoryParserCtxt(const char *, int)"
"language": "c"
"project": "igraph"
"target_name": "read_graphdb"
"target_path": "/src/igraph/fuzzing/read_graphdb.cpp"
"test_files":
- "test_file_path": "/src/libxml2-2.13.3/example/reader4.c"
- "test_file_path": "/src/igraph/tests/unit/igraph_get_shortest_paths2.c"
- "test_file_path": "/src/libxml2-2.13.3/example/reader3.c"
- "test_file_path": "/src/igraph/tests/unit/igraph_get_shortest_paths_dijkstra.c"
- "test_file_path": "/src/libxml2-2.13.3/testModule.c"
- "test_file_path": "/src/igraph/src/paths/shortest_paths.c"
- "test_file_path": "/src/igraph/examples/simple/igraph_get_all_shortest_paths_dijkstra.c"
- "test_file_path": "/src/libxml2-2.13.3/example/parse1.c"
- "test_file_path": "/src/igraph/tests/unit/isomorphism_test.c"
- "test_file_path": "/src/libxml2-2.13.3/example/gjobread.c"
- "test_file_path": "/src/libxml2-2.13.3/testdict.c"
- "test_file_path": "/src/igraph/tests/unit/igraph_get_k_shortest_paths.c"
- "test_file_path": "/src/libxml2-2.13.3/testdso.c"
- "test_file_path": "/src/igraph/tests/unit/all_shortest_paths.c"
- "test_file_path": "/src/libxml2-2.13.3/example/io1.c"
- "test_file_path": "/src/libxml2-2.13.3/example/parse2.c"
- "test_file_path": "/src/igraph/tests/unit/test_utilities.c"
- "test_file_path": "/src/libxml2-2.13.3/example/reader1.c"
- "test_file_path": "/src/libxml2-2.13.3/example/tree1.c"
- "test_file_path": "/src/libxml2-2.13.3/example/xpath1.c"
- "test_file_path": "/src/libxml2-2.13.3/example/tree2.c"
- "test_file_path": "/src/igraph/src/paths/all_shortest_paths.c"
- "test_file_path": "/src/libxml2-2.13.3/runtest.c"
- "test_file_path": "/src/libxml2-2.13.3/example/io2.c"
- "test_file_path": "/src/libxml2-2.13.3/testparser.c"
- "test_file_path": "/src/libxml2-2.13.3/testchar.c"
- "test_file_path": "/src/igraph/tests/unit/igraph_get_shortest_path_bellman_ford.c"
- "test_file_path": "/src/igraph/tests/unit/igraph_get_shortest_paths_bellman_ford.c"
- "test_file_path": "/src/libxml2-2.13.3/testlimits.c"
- "test_file_path": "/src/libxml2-2.13.3/example/xpath2.c"
- "test_file_path": "/src/libxml2-2.13.3/testapi.c"
- "test_file_path": "/usr/share/cmake-3.16/Modules/FindMPI/test_mpi.c"
- "test_file_path": "/src/igraph/tests/unit/single_target_shortest_path.c"
- "test_file_path": "/src/libxml2-2.13.3/testrecurse.c"
- "test_file_path": "/src/igraph/examples/simple/igraph_get_shortest_paths_dijkstra.c"
- "test_file_path": "/src/libxml2-2.13.3/example/reader2.c"
- "test_file_path": "/src/libxml2-2.13.3/example/parse4.c"
- "test_file_path": "/src/libxml2-2.13.3/example/testWriter.c"
- "test_file_path": "/src/igraph/examples/simple/igraph_get_shortest_paths.c"
- "test_file_path": "/src/libxml2-2.13.3/testThreads.c"
