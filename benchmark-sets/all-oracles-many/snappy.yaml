"functions":
- "name": "_ZN6snappy20RawCompressFromIOVecEPK5iovecmPcPm"
  "params":
  - "name": "iov"
    "type": "bool "
  - "name": "uncompressed_length"
    "type": "size_t"
  - "name": "compressed"
    "type": "bool "
  - "name": "compressed_length"
    "type": "bool "
  "return_type": "void"
  "signature": "void snappy::RawCompressFromIOVec(const struct iovec *, size_t, char *, size_t *)"
- "name": "_ZNK6snappy17SnappyIOVecReader9AvailableEv"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "size_t"
  "signature": "size_t snappy::SnappyIOVecReader::Available()"
- "name": "_ZN6snappy4Sink22AppendAndTakeOwnershipEPcmPFvPvPKcmES2_"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "bytes"
    "type": "bool "
  - "name": "n"
    "type": "size_t"
  - "name": "deleter"
    "type": "bool "
  - "name": "deleter_arg"
    "type": "bool "
  "return_type": "void"
  "signature": "void snappy::Sink::AppendAndTakeOwnership(char *, size_t, DW_TAG_subroutine_typeSnappySinkAllocator *, void *)"
- "name": "_ZN6snappy10UncompressEPNS_6SourceEPNS_4SinkE"
  "params":
  - "name": "compressed"
    "type": "bool "
  - "name": "uncompressed"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool snappy::Uncompress(Source *, Sink *)"
- "name": "_ZN6snappy8CompressEPKcmPNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEE"
  "params":
  - "name": "input"
    "type": "bool "
  - "name": "input_length"
    "type": "size_t"
  - "name": "compressed"
    "type": "bool "
  "return_type": "size_t"
  "signature": "size_t snappy::Compress(const char *, size_t, string *)"
- "name": "_ZN6snappy17SnappyIOVecReader4PeekEPm"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "len"
    "type": "bool "
  "return_type": "void"
  "signature": "const char * snappy::SnappyIOVecReader::Peek(size_t *)"
- "name": "_ZN6snappy21GetUncompressedLengthEPNS_6SourceEPj"
  "params":
  - "name": "source"
    "type": "bool "
  - "name": "result"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool snappy::GetUncompressedLength(Source *, uint32_t *)"
- "name": "_ZN6snappy17SnappyIOVecReader4SkipEm"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "n"
    "type": "size_t"
  "return_type": "void"
  "signature": "void snappy::SnappyIOVecReader::Skip(size_t)"
- "name": "_ZN6snappy11RawCompressEPKcmPcPm"
  "params":
  - "name": "input"
    "type": "bool "
  - "name": "input_length"
    "type": "size_t"
  - "name": "compressed"
    "type": "bool "
  - "name": "compressed_length"
    "type": "bool "
  "return_type": "void"
  "signature": "void snappy::RawCompress(const char *, size_t, char *, size_t *)"
- "name": "_ZN6snappy20RawUncompressToIOVecEPNS_6SourceEPK5iovecm"
  "params":
  - "name": "compressed"
    "type": "bool "
  - "name": "iov"
    "type": "bool "
  - "name": "iov_cnt"
    "type": "size_t"
  "return_type": "bool"
  "signature": "bool snappy::RawUncompressToIOVec(Source *, const struct iovec *, size_t)"
- "name": "_ZN6snappy18CompressionOptionsC2Ev"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "void"
  "signature": "void snappy::CompressionOptions::CompressionOptions(struct CompressionOptions *)"
- "name": "_ZN6snappy17CompressFromIOVecEPK5iovecmPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS_18CompressionOptionsE"
  "params":
  - "name": "iov"
    "type": "bool "
  - "name": "iov_cnt"
    "type": "size_t"
  - "name": "compressed"
    "type": "bool "
  - "name": "options"
    "type": "int"
  "return_type": "size_t"
  "signature": "size_t snappy::CompressFromIOVec(const struct iovec *, size_t, string *, struct CompressionOptions)"
- "name": "_ZN6snappy20RawUncompressToIOVecEPKcmPK5iovecm"
  "params":
  - "name": "compressed"
    "type": "bool "
  - "name": "compressed_length"
    "type": "size_t"
  - "name": "iov"
    "type": "bool "
  - "name": "iov_cnt"
    "type": "size_t"
  "return_type": "bool"
  "signature": "bool snappy::RawUncompressToIOVec(const char *, size_t, const struct iovec *, size_t)"
- "name": "_ZN6snappy21SnappyScatteredWriterINS_19SnappySinkAllocatorEE6AppendEPKcmPPc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "ip"
    "type": "bool "
  - "name": "len"
    "type": "size_t"
  - "name": "op_p"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool snappy::SnappyScatteredWriter<snappy::SnappySinkAllocator>::Append(SnappyScatteredWriter<snappy::SnappySinkAllocator> *, const char *, size_t, char **)"
- "name": "_ZN6snappy22UncheckedByteArraySink22AppendAndTakeOwnershipEPcmPFvPvPKcmES2_"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "bytes"
    "type": "bool "
  - "name": "n"
    "type": "size_t"
  - "name": "deleter"
    "type": "bool "
  - "name": "deleter_arg"
    "type": "bool "
  "return_type": "void"
  "signature": "void snappy::UncheckedByteArraySink::AppendAndTakeOwnership(char *, size_t, DW_TAG_subroutine_typeSnappySinkAllocator *, void *)"
- "name": "_ZN6snappy4Sink23GetAppendBufferVariableEmmPcmPm"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "min_size"
    "type": "size_t"
  - "name": "desired_size_hint"
    "type": "size_t"
  - "name": "scratch"
    "type": "bool "
  - "name": "scratch_size"
    "type": "size_t"
  - "name": "allocated_size"
    "type": "bool "
  "return_type": "void"
  "signature": "char * snappy::Sink::GetAppendBufferVariable(size_t, size_t, char *, size_t, size_t *)"
- "name": "_ZN6snappy4Sink15GetAppendBufferEmPc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "length"
    "type": "size_t"
  - "name": "scratch"
    "type": "bool "
  "return_type": "void"
  "signature": "char * snappy::Sink::GetAppendBuffer(size_t, char *)"
- "name": "_ZN6snappy26UncompressAsMuchAsPossibleEPNS_6SourceEPNS_4SinkE"
  "params":
  - "name": "compressed"
    "type": "bool "
  - "name": "uncompressed"
    "type": "bool "
  "return_type": "size_t"
  "signature": "size_t snappy::UncompressAsMuchAsPossible(Source *, Sink *)"
- "name": "_ZN6snappy20RawCompressFromIOVecEPK5iovecmPcPmNS_18CompressionOptionsE"
  "params":
  - "name": "iov"
    "type": "bool "
  - "name": "uncompressed_length"
    "type": "size_t"
  - "name": "compressed"
    "type": "bool "
  - "name": "compressed_length"
    "type": "bool "
  - "name": "options"
    "type": "int"
  "return_type": "void"
  "signature": "void snappy::RawCompressFromIOVec(const struct iovec *, size_t, char *, size_t *, struct CompressionOptions)"
- "name": "_ZN6snappy8CompressEPNS_6SourceEPNS_4SinkE"
  "params":
  - "name": "reader"
    "type": "bool "
  - "name": "writer"
    "type": "bool "
  "return_type": "size_t"
  "signature": "size_t snappy::Compress(Source *, Sink *)"
- "name": "_ZN6snappy17IsValidCompressedEPNS_6SourceE"
  "params":
  - "name": "compressed"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool snappy::IsValidCompressed(Source *)"
- "name": "_ZN6snappy17CompressFromIOVecEPK5iovecmPNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE"
  "params":
  - "name": "iov"
    "type": "bool "
  - "name": "iov_cnt"
    "type": "size_t"
  - "name": "compressed"
    "type": "bool "
  "return_type": "size_t"
  "signature": "size_t snappy::CompressFromIOVec(const struct iovec *, size_t, string *)"
- "name": "_ZN6snappy17SnappyIOVecWriter6AppendEPKcmPPc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "ip"
    "type": "bool "
  - "name": "len"
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "bool"
  "signature": "bool snappy::SnappyIOVecWriter::Append(const char *, size_t, char **)"
- "name": "_ZN6snappy22UncheckedByteArraySink23GetAppendBufferVariableEmmPcmPm"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "min_size"
    "type": "size_t"
  - "name": "desired_size_hint"
    "type": "size_t"
  - "name": "scratch"
    "type": "bool "
  - "name": "scratch_size"
    "type": "size_t"
  - "name": "allocated_size"
    "type": "bool "
  "return_type": "void"
  "signature": "char * snappy::UncheckedByteArraySink::GetAppendBufferVariable(size_t, size_t, char *, size_t, size_t *)"
"language": "c++"
"project": "snappy"
"target_name": "snappy_uncompress_fuzzer"
"target_path": "/src/snappy/snappy_uncompress_fuzzer.cc"
"test_files":
- "test_file_path": "/src/snappy/snappy_test_tool.cc"
- "test_file_path": "/src/snappy/snappy_test_data.cc"
- "test_file_path": "/src/snappy/snappy-test.cc"
- "test_file_path": "/src/snappy/snappy_unittest.cc"
