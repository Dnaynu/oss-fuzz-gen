"functions":
- "name": "lws_system_cpd_start"
  "params":
  - "name": "cx"
    "type": "bool "
  "return_type": "int"
  "signature": "int lws_system_cpd_start(struct lws_context *)"
- "name": "lws_adopt_socket_vhost"
  "params":
  - "name": "vh"
    "type": "bool "
  - "name": "accept_fd"
    "type": "int"
  "return_type": "void"
  "signature": "struct lws * lws_adopt_socket_vhost(struct lws_vhost *, lws_sockfd_type)"
- "name": "lws_create_adopt_udp"
  "params":
  - "name": "vhost"
    "type": "bool "
  - "name": "ads"
    "type": "bool "
  - "name": "port"
    "type": "int"
  - "name": "flags"
    "type": "int"
  - "name": "protocol_name"
    "type": "bool "
  - "name": "ifname"
    "type": "bool "
  - "name": "parent_wsi"
    "type": "bool "
  - "name": "opaque"
    "type": "bool "
  - "name": "retry_policy"
    "type": "bool "
  - "name": "fi_wsi_name"
    "type": "bool "
  "return_type": "void"
  "signature": "struct lws * lws_create_adopt_udp(struct lws_vhost *, const char *, int, int, const char *, const char *, struct lws *, void *, const lws_retry_bo_t *, const char *)"
- "name": "lws_hpack_interpret"
  "params":
  - "name": "wsi"
    "type": "bool "
  - "name": "c"
    "type": "char"
  "return_type": "int"
  "signature": "int lws_hpack_interpret(struct lws *, unsigned char)"
- "name": "lws_ss_sys_cpd"
  "params":
  - "name": "cx"
    "type": "bool "
  "return_type": "int"
  "signature": "int lws_ss_sys_cpd(struct lws_context *)"
- "name": "lws_ss_request_tx"
  "params":
  - "name": "h"
    "type": "bool "
  "return_type": "int"
  "signature": "lws_ss_state_return_t lws_ss_request_tx(lws_ss_handle_t *)"
- "name": "lws_adopt_socket_readbuf"
  "params":
  - "name": "context"
    "type": "bool "
  - "name": "accept_fd"
    "type": "int"
  - "name": "readbuf"
    "type": "bool "
  - "name": "len"
    "type": "size_t"
  "return_type": "void"
  "signature": "struct lws * lws_adopt_socket_readbuf(struct lws_context *, lws_sockfd_type, const char *, size_t)"
- "name": "lws_ss_sys_fetch_policy"
  "params":
  - "name": "context"
    "type": "bool "
  "return_type": "int"
  "signature": "int lws_ss_sys_fetch_policy(struct lws_context *)"
- "name": "lws_create_vhost"
  "params":
  - "name": "context"
    "type": "bool "
  - "name": "info"
    "type": "bool "
  "return_type": "void"
  "signature": "struct lws_vhost * lws_create_vhost(struct lws_context *, const struct lws_context_creation_info *)"
- "name": "lws_create_context"
  "params":
  - "name": "info"
    "type": "bool "
  "return_type": "void"
  "signature": "struct lws_context * lws_create_context(const struct lws_context_creation_info *)"
- "name": "lws_adopt_ss_server_accept"
  "params":
  - "name": "new_wsi"
    "type": "bool "
  "return_type": "int"
  "signature": "int lws_adopt_ss_server_accept(struct lws *)"
- "name": "lws_ss_request_tx_len"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "len"
    "type": "size_t"
  "return_type": "int"
  "signature": "lws_ss_state_return_t lws_ss_request_tx_len(lws_ss_handle_t *, unsigned long)"
- "name": "lws_ss_create"
  "params":
  - "name": "context"
    "type": "bool "
  - "name": "tsi"
    "type": "int"
  - "name": "ssi"
    "type": "bool "
  - "name": "opaque_user_data"
    "type": "bool "
  - "name": "ppss"
    "type": "bool "
  - "name": "reserved"
    "type": "bool "
  - "name": "ppayload_fmt"
    "type": "bool "
  "return_type": "int"
  "signature": "int lws_ss_create(struct lws_context *, int, const lws_ss_info_t *, void *, lws_ss_handle_t **, void *, const char **)"
- "name": "lws_parse_mac"
  "params":
  - "name": "ads"
    "type": "bool "
  - "name": "result_6_bytes"
    "type": "bool "
  "return_type": "int"
  "signature": "int lws_parse_mac(const char *, uint8_t *)"
- "name": "lws_adopt_socket_vhost_readbuf"
  "params":
  - "name": "vhost"
    "type": "bool "
  - "name": "accept_fd"
    "type": "int"
  - "name": "readbuf"
    "type": "bool "
  - "name": "len"
    "type": "size_t"
  "return_type": "void"
  "signature": "struct lws * lws_adopt_socket_vhost_readbuf(struct lws_vhost *, lws_sockfd_type, const char *, size_t)"
- "name": "lws_http_action"
  "params":
  - "name": "wsi"
    "type": "bool "
  "return_type": "int"
  "signature": "int lws_http_action(struct lws *)"
- "name": "lws_display_render_png"
  "params":
  - "name": "rs"
    "type": "bool "
  "return_type": "int"
  "signature": "lws_stateful_ret_t lws_display_render_png(struct lws_display_render_state *)"
- "name": "lws_system_cpd_start_defer"
  "params":
  - "name": "cx"
    "type": "bool "
  - "name": "defer_us"
    "type": "size_t"
  "return_type": "void"
  "signature": "void lws_system_cpd_start_defer(struct lws_context *, lws_usec_t)"
- "name": "lws_handshake_server"
  "params":
  - "name": "wsi"
    "type": "bool "
  - "name": "buf"
    "type": "bool "
  - "name": "len"
    "type": "size_t"
  "return_type": "int"
  "signature": "int lws_handshake_server(struct lws *, unsigned char **, size_t)"
- "name": "lws_ss_policy_set"
  "params":
  - "name": "context"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  "return_type": "int"
  "signature": "int lws_ss_policy_set(struct lws_context *, const char *)"
- "name": "lws_ss_sys_auth_api_amazon_com"
  "params":
  - "name": "context"
    "type": "bool "
  "return_type": "int"
  "signature": "int lws_ss_sys_auth_api_amazon_com(struct lws_context *)"
- "name": "lws_adopt_socket"
  "params":
  - "name": "context"
    "type": "bool "
  - "name": "accept_fd"
    "type": "int"
  "return_type": "void"
  "signature": "struct lws * lws_adopt_socket(struct lws_context *, lws_sockfd_type)"
- "name": "lws_display_render_jpeg"
  "params":
  - "name": "rs"
    "type": "bool "
  "return_type": "int"
  "signature": "lws_stateful_ret_t lws_display_render_jpeg(struct lws_display_render_state *)"
- "name": "_lws_ss_request_tx"
  "params":
  - "name": "h"
    "type": "bool "
  "return_type": "int"
  "signature": "lws_ss_state_return_t _lws_ss_request_tx(lws_ss_handle_t *)"
- "name": "lws_read_h2"
  "params":
  - "name": "wsi"
    "type": "bool "
  - "name": "buf"
    "type": "bool "
  - "name": "len"
    "type": "size_t"
  "return_type": "int"
  "signature": "int lws_read_h2(struct lws *, unsigned char *, lws_filepos_t)"
- "name": "lws_h2_parser"
  "params":
  - "name": "wsi"
    "type": "bool "
  - "name": "in"
    "type": "bool "
  - "name": "_inlen"
    "type": "size_t"
  - "name": "inused"
    "type": "bool "
  "return_type": "int"
  "signature": "int lws_h2_parser(struct lws *, unsigned char *, lws_filepos_t, lws_filepos_t *)"
- "name": "lws_h2_do_pps_send"
  "params":
  - "name": "wsi"
    "type": "bool "
  "return_type": "int"
  "signature": "int lws_h2_do_pps_send(struct lws *)"
- "name": "lws_read_h1"
  "params":
  - "name": "wsi"
    "type": "bool "
  - "name": "buf"
    "type": "bool "
  - "name": "len"
    "type": "size_t"
  "return_type": "int"
  "signature": "int lws_read_h1(struct lws *, unsigned char *, lws_filepos_t)"
- "name": "lws_adopt_descriptor_vhost"
  "params":
  - "name": "vh"
    "type": "bool "
  - "name": "type"
    "type": "int"
  - "name": "fd"
    "type": "int"
  - "name": "vh_prot_name"
    "type": "bool "
  - "name": "parent"
    "type": "bool "
  "return_type": "void"
  "signature": "struct lws * lws_adopt_descriptor_vhost(struct lws_vhost *, lws_adoption_type, lws_sock_file_fd_type, const char *, struct lws *)"
- "name": "lws_ss_adopt_raw"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "fd"
    "type": "int"
  "return_type": "int"
  "signature": "int lws_ss_adopt_raw(struct lws_ss_handle *, lws_sock_file_fd_type)"
- "name": "lws_adopt_descriptor_vhost_via_info"
  "params":
  - "name": "info"
    "type": "bool "
  "return_type": "void"
  "signature": "struct lws * lws_adopt_descriptor_vhost_via_info(const lws_adopt_desc_t *)"
- "name": "lws_http_client_socket_service"
  "params":
  - "name": "wsi"
    "type": "bool "
  - "name": "pollfd"
    "type": "bool "
  "return_type": "int"
  "signature": "int lws_http_client_socket_service(struct lws *, struct pollfd *)"
- "name": "lws_ss_policy_ref_trust_store"
  "params":
  - "name": "context"
    "type": "bool "
  - "name": "pol"
    "type": "bool "
  - "name": "doref"
    "type": "char"
  "return_type": "void"
  "signature": "struct lws_vhost * lws_ss_policy_ref_trust_store(struct lws_context *, const lws_ss_policy_t *, char)"
- "name": "lws_context_default_loop_run_destroy"
  "params":
  - "name": "cx"
    "type": "bool "
  "return_type": "void"
  "signature": "void lws_context_default_loop_run_destroy(struct lws_context *)"
"language": "c"
"project": "libwebsockets"
"target_name": "lws_upng_inflate_fuzzer"
"target_path": "/src/libwebsockets/lws_upng_inflate_fuzzer.cpp"
"test_files":
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/raw/minimal-raw-netcat/minimal-raw-netcat.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/embedded/rt595/hello_world/project/drivers/fsl_usart.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/embedded/lhp/lhp-ss.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-avs/main-client.c"
- "test_file_path": "/src/libwebsockets/test-apps/test-lejp.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/sink/hello_world/main.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-form-get/minimal-http-server-form-get.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/dbus-client/minimal-dbus-ws-proxy-testclient/minimal-dbus-ws-proxy-testclient.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-gunzip/main.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-broker/minimal-ws-broker.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-threads/minimal-secure-streams-threads.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-h2-long-poll/minimal-http-server.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-pmd-corner/minimal-ws-server-pmd-corner.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/embedded/rt595/hello_world/project/drivers/fsl_cache.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/embedded/lhp/esp32-waveshare-122-250-bw/main/devices.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-form-post-file/minimal-http-server-form-post-file.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/embedded/lhp/esp32-waveshare-600-448-7col/main/devices.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/embedded/pico/pico-sspc-binance/get-ss.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/embedded/pico/pico-sspc-binance/helpers.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-ring/minimal-ws-server-ring.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-threads/protocol_lws_minimal.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server-threadpool/minimal-ws-server-threadpool.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/embedded/esp32/esp-wrover-kit/rgb565/rgb565.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-sse/minimal-http-server-sse.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/embedded/rt595/hello_world/project/source/virtual_com.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lws_cache/main.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-jose/jwe.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/embedded/rt595/hello_world/project/board/clock_config.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/http-client/minimal-http-client-jit-trust/minimal-http-client.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/secure-streams/minimal-secure-streams-server-raw/ss-server.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/embedded/rt595/hello_world/project/drivers/fsl_iap.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/ws-server/minimal-ws-server/protocol_lws_minimal.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-eventlib-foreign/minimal-http-server-eventlib-foreign.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-smtp_client/main.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-custom-headers/minimal-http-server-custom-headers.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/embedded/esp32/esp-c3dev/main/lws-minimal-esp32.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/api-tests/api-test-lws_struct-json/main.c"
- "test_file_path": "/src/libwebsockets/minimal-examples/client/ws-echo/ws-echo-ss.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-systemd-socketact/minimal-http-server-systemd-socketact.c"
- "test_file_path": "/src/libwebsockets/minimal-examples-lowlevel/http-server/minimal-http-server-basicauth/minimal-http-server-basicauth.c"
