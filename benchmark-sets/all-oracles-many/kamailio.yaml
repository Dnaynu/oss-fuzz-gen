"functions":
- "name": "fix_actions"
  "params":
  - "name": "a"
    "type": "bool "
  "return_type": "int"
  "signature": "int fix_actions(struct action *)"
- "name": "handle_io"
  "params":
  - "name": "fm"
    "type": "bool "
  - "name": "events"
    "type": "short"
  - "name": "idx"
    "type": "int"
  "return_type": "int"
  "signature": "int handle_io(struct fd_map *, short, int)"
- "name": "pp_substdef_add"
  "params":
  - "name": "data"
    "type": "bool "
  - "name": "mode"
    "type": "int"
  "return_type": "int"
  "signature": "int pp_substdef_add(char *, int)"
- "name": "run_onsend"
  "params":
  - "name": "orig_msg"
    "type": "bool "
  - "name": "dst"
    "type": "bool "
  - "name": "buf"
    "type": "bool "
  - "name": "len"
    "type": "int"
  "return_type": "int"
  "signature": "int run_onsend(sip_msg_t *, dest_info_t *, char *, int)"
- "name": "pp_ifexp_eval"
  "params":
  - "name": "exval"
    "type": "bool "
  - "name": "exlen"
    "type": "int"
  "return_type": "void"
  "signature": "void pp_ifexp_eval(char *, int)"
- "name": "add_actions"
  "params":
  - "name": "a"
    "type": "bool "
  - "name": "head"
    "type": "bool "
  "return_type": "int"
  "signature": "int add_actions(struct action *, struct action **)"
- "name": "pp_subst_run"
  "params":
  - "name": "data"
    "type": "bool "
  "return_type": "int"
  "signature": "int pp_subst_run(char **)"
- "name": "ipv6_get_netif_scope"
  "params":
  - "name": "ipval"
    "type": "bool "
  "return_type": "int"
  "signature": "unsigned int ipv6_get_netif_scope(char *)"
- "name": "async_task_set_workers_group"
  "params":
  - "name": "data"
    "type": "bool "
  "return_type": "int"
  "signature": "int async_task_set_workers_group(char *)"
- "name": "register_avpflag"
  "params":
  - "name": "name"
    "type": "bool "
  "return_type": "int"
  "signature": "unsigned int register_avpflag(char *)"
- "name": "forward_reply"
  "params":
  - "name": "msg"
    "type": "bool "
  "return_type": "int"
  "signature": "int forward_reply(struct sip_msg *)"
- "name": "rval_get_str"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "msg"
    "type": "bool "
  - "name": "s"
    "type": "bool "
  - "name": "rv"
    "type": "bool "
  - "name": "cache"
    "type": "bool "
  "return_type": "int"
  "signature": "int rval_get_str(struct run_act_ctx *, struct sip_msg *, str *, struct rvalue *, struct rval_cache *)"
- "name": "eval_expr"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "e"
    "type": "bool "
  - "name": "msg"
    "type": "bool "
  "return_type": "int"
  "signature": "int eval_expr(struct run_act_ctx *, struct expr *, struct sip_msg *)"
- "name": "forward_request_uac"
  "params":
  - "name": "msg"
    "type": "bool "
  - "name": "dst"
    "type": "bool "
  - "name": "port"
    "type": "short"
  - "name": "send_info"
    "type": "bool "
  "return_type": "int"
  "signature": "int forward_request_uac(struct sip_msg *, str *, unsigned short, struct dest_info *)"
- "name": "forward_uac_uri"
  "params":
  - "name": "msg"
    "type": "bool "
  - "name": "vuri"
    "type": "bool "
  "return_type": "int"
  "signature": "int forward_uac_uri(sip_msg_t *, str *)"
- "name": "rval_get_long"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "msg"
    "type": "bool "
  - "name": "i"
    "type": "bool "
  - "name": "rv"
    "type": "bool "
  - "name": "cache"
    "type": "bool "
  "return_type": "size_t"
  "signature": "long rval_get_long(struct run_act_ctx *, struct sip_msg *, long *, struct rvalue *, struct rval_cache *)"
- "name": "tcp_receive_loop"
  "params":
  - "name": "unix_sock"
    "type": "int"
  "return_type": "void"
  "signature": "void tcp_receive_loop(int)"
- "name": "fix_switch"
  "params":
  - "name": "t"
    "type": "bool "
  "return_type": "int"
  "signature": "int fix_switch(struct action *)"
- "name": "pp_subst_add"
  "params":
  - "name": "data"
    "type": "bool "
  "return_type": "int"
  "signature": "int pp_subst_add(char *)"
- "name": "tcp_init_children"
  "params":
  - "name": "woneinit"
    "type": "bool "
  "return_type": "int"
  "signature": "int tcp_init_children(int *)"
- "name": "rval_get_tmp_str"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "msg"
    "type": "bool "
  - "name": "tmpv"
    "type": "bool "
  - "name": "rv"
    "type": "bool "
  - "name": "cache"
    "type": "bool "
  - "name": "tmp_cache"
    "type": "bool "
  "return_type": "int"
  "signature": "int rval_get_tmp_str(struct run_act_ctx *, struct sip_msg *, str *, struct rvalue *, struct rval_cache *, struct rval_cache *)"
- "name": "fix_expr"
  "params":
  - "name": "exp"
    "type": "bool "
  "return_type": "int"
  "signature": "int fix_expr(struct expr *)"
- "name": "rval_expr_eval"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "msg"
    "type": "bool "
  - "name": "rve"
    "type": "bool "
  "return_type": "void"
  "signature": "struct rvalue * rval_expr_eval(struct run_act_ctx *, struct sip_msg *, struct rval_expr *)"
- "name": "fix_rval_expr"
  "params":
  - "name": "p"
    "type": "bool "
  "return_type": "int"
  "signature": "int fix_rval_expr(void *)"
- "name": "__resolvehost"
  "params":
  - "name": "name"
    "type": "bool "
  "return_type": "void"
  "signature": "struct hostent * __resolvehost(char *)"
- "name": "rval_expr_eval_rvlong"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "msg"
    "type": "bool "
  - "name": "res_rv"
    "type": "bool "
  - "name": "res_i"
    "type": "bool "
  - "name": "rve"
    "type": "bool "
  - "name": "cache"
    "type": "bool "
  "return_type": "int"
  "signature": "int rval_expr_eval_rvlong(struct run_act_ctx *, struct sip_msg *, struct rvalue **, long *, struct rval_expr *, struct rval_cache *)"
- "name": "forward_reply_nocb"
  "params":
  - "name": "msg"
    "type": "bool "
  "return_type": "int"
  "signature": "int forward_reply_nocb(struct sip_msg *)"
- "name": "run_actions"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "a"
    "type": "bool "
  - "name": "msg"
    "type": "bool "
  "return_type": "int"
  "signature": "int run_actions(struct run_act_ctx *, struct action *, struct sip_msg *)"
- "name": "add_avp_galias_str"
  "params":
  - "name": "alias_definition"
    "type": "bool "
  "return_type": "int"
  "signature": "int add_avp_galias_str(char *)"
- "name": "do_action"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "a"
    "type": "bool "
  - "name": "msg"
    "type": "bool "
  "return_type": "int"
  "signature": "int do_action(struct run_act_ctx *, struct action *, struct sip_msg *)"
- "name": "forward_request_mode"
  "params":
  - "name": "msg"
    "type": "bool "
  - "name": "dst"
    "type": "bool "
  - "name": "port"
    "type": "short"
  - "name": "send_info"
    "type": "bool "
  - "name": "mbmode"
    "type": "int"
  "return_type": "int"
  "signature": "int forward_request_mode(struct sip_msg *, str *, unsigned short, struct dest_info *, unsigned int)"
- "name": "rval_expr_eval_long"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "msg"
    "type": "bool "
  - "name": "res"
    "type": "bool "
  - "name": "rve"
    "type": "bool "
  "return_type": "int"
  "signature": "int rval_expr_eval_long(struct run_act_ctx *, struct sip_msg *, long *, struct rval_expr *)"
- "name": "run_onsend_evroute"
  "params":
  - "name": "sndinfo"
    "type": "bool "
  - "name": "evrt"
    "type": "int"
  - "name": "evcb"
    "type": "bool "
  - "name": "evname"
    "type": "bool "
  "return_type": "int"
  "signature": "int run_onsend_evroute(onsend_info_t *, int, str *, str *)"
- "name": "rval_convert"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "msg"
    "type": "bool "
  - "name": "type"
    "type": "int"
  - "name": "v"
    "type": "bool "
  - "name": "c"
    "type": "bool "
  "return_type": "void"
  "signature": "struct rvalue * rval_convert(struct run_act_ctx *, struct sip_msg *, DW_TAG_enumeration_typerval_type, struct rvalue *, struct rval_cache *)"
- "name": "lval_assign"
  "params":
  - "name": "h"
    "type": "bool "
  - "name": "msg"
    "type": "bool "
  - "name": "lv"
    "type": "bool "
  - "name": "rve"
    "type": "bool "
  "return_type": "int"
  "signature": "int lval_assign(struct run_act_ctx *, struct sip_msg *, struct lvalue *, struct rval_expr *)"
- "name": "find_module_by_name"
  "params":
  - "name": "mod"
    "type": "bool "
  "return_type": "void"
  "signature": "struct sr_module * find_module_by_name(char *)"
"language": "c"
"project": "kamailio"
"target_name": "fuzz_uri"
"target_path": "/src/kamailio/misc/fuzz/fuzz_uri.c"
"test_files":
- "test_file_path": "/src/kamailio/src/modules/ndb_cassandra/test-cpp/cassandra_types.cpp"
- "test_file_path": "/src/kamailio/src/modules/tm/test.c"
- "test_file_path": "/src/kamailio/test/misc/code/resolver_test.c"
- "test_file_path": "/src/kamailio/test/misc/code/atomic_test2.c"
- "test_file_path": "/src/kamailio/src/modules/ndb_cassandra/test-cpp/test.c"
- "test_file_path": "/src/kamailio/test/misc/code/bit_scan_test.c"
- "test_file_path": "/src/kamailio/src/modules/ndb_cassandra/test-cpp/cassandra_constants.cpp"
- "test_file_path": "/src/kamailio/test/misc/code/udp_test_proxy.c"
- "test_file_path": "/src/kamailio/test/misc/code/re_test.c"
- "test_file_path": "/src/kamailio/test/misc/code/lock_test.c"
- "test_file_path": "/src/kamailio/test/misc/code/test.c"
- "test_file_path": "/src/kamailio/test/mod_httpapitest/httpapitest.c"
- "test_file_path": "/src/kamailio/test/misc/code/endian_test.c"
- "test_file_path": "/src/kamailio/src/modules/ndb_cassandra/test-cpp/Cassandra.cpp"
- "test_file_path": "/src/kamailio/test/misc/code/atomic_test.c"
- "test_file_path": "/src/kamailio/src/modules/janssonrpcc/unit_tests/seatest/seatest.c"
- "test_file_path": "/src/kamailio/src/modules/misctest/misctest_mod.c"
- "test_file_path": "/src/kamailio/src/modules/ims_ipsec_pcscf/spi_list_tests.c"
- "test_file_path": "/src/kamailio/src/modules/janssonrpcc/unit_tests/netstring.c"
- "test_file_path": "/src/kamailio/test/misc/code/locking/locking_test.c"
- "test_file_path": "/src/kamailio/src/core/mem/memtest.c"
- "test_file_path": "/src/kamailio/src/modules/ndb_cassandra/test-cpp/thrift_wrapper.cpp"
