"functions":
- "name": "transport_push"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "transport"
    "type": "bool "
  - "name": "rs"
    "type": "bool "
  - "name": "flags"
    "type": "int"
  - "name": "reject_reasons"
    "type": "bool "
  "return_type": "int"
  "signature": "int transport_push(struct repository *, struct transport *, struct refspec *, int, unsigned int *)"
- "name": "merge_recursive"
  "params":
  - "name": "opt"
    "type": "bool "
  - "name": "h1"
    "type": "bool "
  - "name": "h2"
    "type": "bool "
  - "name": "merge_bases"
    "type": "bool "
  - "name": "result"
    "type": "bool "
  "return_type": "int"
  "signature": "int merge_recursive(struct merge_options *, struct commit *, struct commit *, const struct commit_list *, struct commit **)"
- "name": "fetch_submodules"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "options"
    "type": "bool "
  - "name": "prefix"
    "type": "bool "
  - "name": "command_line_option"
    "type": "int"
  - "name": "default_option"
    "type": "int"
  - "name": "quiet"
    "type": "int"
  - "name": "max_parallel_jobs"
    "type": "int"
  "return_type": "int"
  "signature": "int fetch_submodules(struct repository *, const struct strvec *, const char *, int, int, int, int)"
- "name": "ensure_server_supports_v2"
  "params":
  - "name": "c"
    "type": "bool "
  "return_type": "void"
  "signature": "void ensure_server_supports_v2(const char *)"
- "name": "lookup_commit_reference_by_name_gently"
  "params":
  - "name": "name"
    "type": "bool "
  - "name": "quiet"
    "type": "int"
  "return_type": "void"
  "signature": "struct commit * lookup_commit_reference_by_name_gently(const char *, int)"
- "name": "merge_trees"
  "params":
  - "name": "opt"
    "type": "bool "
  - "name": "head"
    "type": "bool "
  - "name": "merge"
    "type": "bool "
  - "name": "merge_base"
    "type": "bool "
  "return_type": "int"
  "signature": "int merge_trees(struct merge_options *, struct tree *, struct tree *, struct tree *)"
- "name": "sequencer_skip"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "opts"
    "type": "bool "
  "return_type": "int"
  "signature": "int sequencer_skip(struct repository *, struct replay_opts *)"
- "name": "create_autostash_ref"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "refname"
    "type": "bool "
  "return_type": "void"
  "signature": "void create_autostash_ref(struct repository *, const char *)"
- "name": "sequencer_continue"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "opts"
    "type": "bool "
  "return_type": "int"
  "signature": "int sequencer_continue(struct repository *, struct replay_opts *)"
- "name": "midx_repack"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "object_dir"
    "type": "bool "
  - "name": "batch_size"
    "type": "size_t"
  - "name": "flags"
    "type": "int"
  "return_type": "int"
  "signature": "int midx_repack(struct repository *, const char *, size_t, unsigned int)"
- "name": "has_unstaged_changes"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "ignore_submodules"
    "type": "int"
  "return_type": "int"
  "signature": "int has_unstaged_changes(struct repository *, int)"
- "name": "merge_recursive_generic"
  "params":
  - "name": "opt"
    "type": "bool "
  - "name": "head"
    "type": "bool "
  - "name": "merge"
    "type": "bool "
  - "name": "num_merge_bases"
    "type": "int"
  - "name": "merge_bases"
    "type": "bool "
  - "name": "result"
    "type": "bool "
  "return_type": "int"
  "signature": "int merge_recursive_generic(struct merge_options *, const struct object_id *, const struct object_id *, int, const struct object_id *, struct commit **)"
- "name": "update_one"
  "params":
  - "name": "it"
    "type": "bool "
  - "name": "cache"
    "type": "bool "
  - "name": "entries"
    "type": "int"
  - "name": "base"
    "type": "bool "
  - "name": "baselen"
    "type": "int"
  - "name": "skip_count"
    "type": "bool "
  - "name": "flags"
    "type": "int"
  "return_type": "int"
  "signature": "void update_one(const char *)"
- "name": "notes_merge"
  "params":
  - "name": "o"
    "type": "bool "
  - "name": "local_tree"
    "type": "bool "
  - "name": "result_oid"
    "type": "bool "
  "return_type": "int"
  "signature": "int notes_merge(struct notes_merge_options *, struct notes_tree *, struct object_id *)"
- "name": "submodule_touches_in_range"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "excl_oid"
    "type": "bool "
  - "name": "incl_oid"
    "type": "bool "
  "return_type": "int"
  "signature": "int submodule_touches_in_range(struct repository *, struct object_id *, struct object_id *)"
- "name": "merge_incore_nonrecursive"
  "params":
  - "name": "opt"
    "type": "bool "
  - "name": "merge_base"
    "type": "bool "
  - "name": "side1"
    "type": "bool "
  - "name": "side2"
    "type": "bool "
  - "name": "result"
    "type": "bool "
  "return_type": "void"
  "signature": "void merge_incore_nonrecursive(struct merge_options *, struct tree *, struct tree *, struct tree *, struct merge_result *)"
- "name": "push_unpushed_submodules"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "commits"
    "type": "bool "
  - "name": "remote"
    "type": "bool "
  - "name": "rs"
    "type": "bool "
  - "name": "push_options"
    "type": "bool "
  - "name": "dry_run"
    "type": "int"
  "return_type": "int"
  "signature": "int push_unpushed_submodules(struct repository *, struct oid_array *, const struct remote *, const struct refspec *, const struct string_list *, int)"
- "name": "advise_on_updating_sparse_paths"
  "params":
  - "name": "pathspec_list"
    "type": "bool "
  "return_type": "void"
  "signature": "void advise_on_updating_sparse_paths(struct string_list *)"
- "name": "has_uncommitted_changes"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "ignore_submodules"
    "type": "int"
  "return_type": "int"
  "signature": "int has_uncommitted_changes(struct repository *, int)"
- "name": "git_config_push_env"
  "params":
  - "name": "spec"
    "type": "bool "
  "return_type": "void"
  "signature": "void git_config_push_env(const char *)"
- "name": "real_pathdup"
  "params":
  - "name": "path"
    "type": "bool "
  - "name": "die_on_error"
    "type": "int"
  "return_type": "void"
  "signature": "char * real_pathdup(const char *, int)"
- "name": "is_bundle"
  "params":
  - "name": "path"
    "type": "bool "
  - "name": "quiet"
    "type": "int"
  "return_type": "int"
  "signature": "int is_bundle(const char *, int)"
- "name": "assign_blame"
  "params":
  - "name": "sb"
    "type": "bool "
  - "name": "opt"
    "type": "int"
  "return_type": "void"
  "signature": "void assign_blame(struct blame_scoreboard *, int)"
- "name": "get_wt_convert_stats_ascii"
  "params":
  - "name": "path"
    "type": "bool "
  "return_type": "void"
  "signature": "const char * get_wt_convert_stats_ascii(const char *)"
- "name": "absolute_pathdup"
  "params":
  - "name": "path"
    "type": "bool "
  "return_type": "void"
  "signature": "char * absolute_pathdup(const char *)"
- "name": "git_config_push_parameter"
  "params":
  - "name": "text"
    "type": "bool "
  "return_type": "void"
  "signature": "void git_config_push_parameter(const char *)"
- "name": "die_resolve_conflict"
  "params":
  - "name": "me"
    "type": "bool "
  "return_type": "void"
  "signature": "void die_resolve_conflict(const char *)"
- "name": "require_clean_work_tree"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "action"
    "type": "bool "
  - "name": "hint"
    "type": "bool "
  - "name": "ignore_submodules"
    "type": "int"
  - "name": "gently"
    "type": "int"
  "return_type": "int"
  "signature": "int require_clean_work_tree(struct repository *, const char *, const char *, int, int)"
- "name": "create_autostash"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "path"
    "type": "bool "
  "return_type": "void"
  "signature": "void create_autostash(struct repository *, const char *)"
- "name": "find_unpushed_submodules"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "commits"
    "type": "bool "
  - "name": "remotes_name"
    "type": "bool "
  - "name": "needs_pushing"
    "type": "bool "
  "return_type": "int"
  "signature": "int find_unpushed_submodules(struct repository *, struct oid_array *, const char *, struct string_list *)"
- "name": "git_attr"
  "params":
  - "name": "name"
    "type": "bool "
  "return_type": "void"
  "signature": "const struct git_attr * git_attr(const char *)"
- "name": "lookup_commit_reference_by_name"
  "params":
  - "name": "name"
    "type": "bool "
  "return_type": "void"
  "signature": "struct commit * lookup_commit_reference_by_name(const char *)"
- "name": "error_resolve_conflict"
  "params":
  - "name": "me"
    "type": "bool "
  "return_type": "int"
  "signature": "int error_resolve_conflict(const char *)"
- "name": "sequencer_pick_revisions"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "opts"
    "type": "bool "
  "return_type": "int"
  "signature": "int sequencer_pick_revisions(struct repository *, struct replay_opts *)"
- "name": "git_config_prepare_comment_string"
  "params":
  - "name": "comment"
    "type": "bool "
  "return_type": "void"
  "signature": "char * git_config_prepare_comment_string(const char *)"
- "name": "advise_on_moving_dirty_path"
  "params":
  - "name": "pathspec_list"
    "type": "bool "
  "return_type": "void"
  "signature": "void advise_on_moving_dirty_path(struct string_list *)"
- "name": "hashfd_check"
  "params":
  - "name": "name"
    "type": "bool "
  "return_type": "void"
  "signature": "struct hashfile * hashfd_check(const char *)"
- "name": "absolute_path"
  "params":
  - "name": "path"
    "type": "bool "
  "return_type": "void"
  "signature": "const char * absolute_path(const char *)"
- "name": "get_merge_parent"
  "params":
  - "name": "name"
    "type": "bool "
  "return_type": "void"
  "signature": "struct commit * get_merge_parent(const char *)"
- "name": "complete_action"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "opts"
    "type": "bool "
  - "name": "flags"
    "type": "int"
  - "name": "shortrevisions"
    "type": "bool "
  - "name": "onto_name"
    "type": "bool "
  - "name": "onto"
    "type": "bool "
  - "name": "orig_head"
    "type": "bool "
  - "name": "commands"
    "type": "bool "
  - "name": "autosquash"
    "type": "int"
  - "name": "update_refs"
    "type": "int"
  - "name": "todo_list"
    "type": "bool "
  "return_type": "int"
  "signature": "int complete_action(struct repository *, struct replay_opts *, unsigned int, const char *, const char *, struct commit *, const struct object_id *, struct string_list *, unsigned int, unsigned int, struct todo_list *)"
"language": "c++"
"project": "git"
"target_name": "fuzz-pack-idx"
"target_path": "/src/git/oss-fuzz/fuzz-pack-idx.c"
"test_files":
- "test_file_path": "/src/git/t/helper/test-mergesort.c"
- "test_file_path": "/src/git/t/unit-tests/clar/test/main.c"
- "test_file_path": "/src/git/t/helper/test-revision-walking.c"
- "test_file_path": "/src/zlib/test/example.c"
- "test_file_path": "/src/git/t/helper/test-reftable.c"
- "test_file_path": "/src/git/t/helper/test-pkt-line.c"
- "test_file_path": "/src/git/t/helper/test-truncate.c"
- "test_file_path": "/src/git/t/helper/test-pack-mtimes.c"
- "test_file_path": "/src/git/t/helper/test-sha1.c"
- "test_file_path": "/src/git/t/helper/test-config.c"
- "test_file_path": "/src/git/t/helper/test-string-list.c"
- "test_file_path": "/src/git/t/helper/test-partial-clone.c"
- "test_file_path": "/src/git/t/t0200/test.c"
- "test_file_path": "/src/zlib/test/minigzip.c"
- "test_file_path": "/src/git/t/helper/test-delete-gpgsig.c"
- "test_file_path": "/src/git/t/helper/test-genrandom.c"
- "test_file_path": "/src/zlib/examples/gzlog.c"
- "test_file_path": "/src/git/t/helper/test-match-trees.c"
- "test_file_path": "/src/git/t/helper/test-xml-encode.c"
- "test_file_path": "/src/git/t/helper/test-json-writer.c"
- "test_file_path": "/src/git/t/helper/test-path-utils.c"
- "test_file_path": "/src/zlib/examples/zran.c"
- "test_file_path": "/src/git/t/unit-tests/t-oidmap.c"
- "test_file_path": "/src/zlib/examples/zpipe.c"
- "test_file_path": "/src/git/t/helper/test-bloom.c"
- "test_file_path": "/src/git/t/unit-tests/t-hash.c"
- "test_file_path": "/src/git/t/helper/test-subprocess.c"
- "test_file_path": "/src/git/t/unit-tests/t-urlmatch-normalization.c"
- "test_file_path": "/src/git/t/unit-tests/clar/test/sample.c"
- "test_file_path": "/src/git/t/helper/test-trace2.c"
- "test_file_path": "/src/git/t/unit-tests/lib-oid.c"
- "test_file_path": "/src/git/t/unit-tests/t-reftable-record.c"
- "test_file_path": "/src/zlib/contrib/puff/pufftest.c"
- "test_file_path": "/src/git/t/unit-tests/unit-test.c"
- "test_file_path": "/src/git/t/helper/test-delta.c"
- "test_file_path": "/src/git/t/helper/test-ref-store.c"
- "test_file_path": "/src/zlib/examples/gznorm.c"
- "test_file_path": "/src/git/t/helper/test-simple-ipc.c"
- "test_file_path": "/src/zlib/contrib/iostream/test.cpp"
- "test_file_path": "/src/zlib/contrib/iostream2/zstream_test.cpp"
