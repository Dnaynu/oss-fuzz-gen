"functions":
- "name": "cJSON_AddBoolToObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  - "name": "boolean"
    "type": "int"
  "return_type": "void"
  "signature": "cJSON * cJSON_AddBoolToObject(const cJSON *, const const char *, const cJSON_bool)"
- "name": "cJSON_AddNumberToObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  - "name": "number"
    "type": "double"
  "return_type": "void"
  "signature": "cJSON * cJSON_AddNumberToObject(const cJSON *, const const char *, const double)"
- "name": "cJSON_AddArrayToObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  "return_type": "void"
  "signature": "cJSON * cJSON_AddArrayToObject(const cJSON *, const const char *)"
- "name": "cJSON_PrintPreallocated"
  "params":
  - "name": "item"
    "type": "bool "
  - "name": "buffer"
    "type": "bool "
  - "name": "length"
    "type": "int"
  - "name": "format"
    "type": "int"
  "return_type": "int"
  "signature": "cJSON_bool cJSON_PrintPreallocated(cJSON *, char *, const int, const cJSON_bool)"
- "name": "cJSON_ReplaceItemInObjectCaseSensitive"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "string"
    "type": "bool "
  - "name": "newitem"
    "type": "bool "
  "return_type": "int"
  "signature": "cJSON_bool cJSON_ReplaceItemInObjectCaseSensitive(cJSON *, const char *, cJSON *)"
- "name": "cJSON_AddFalseToObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  "return_type": "void"
  "signature": "cJSON * cJSON_AddFalseToObject(const cJSON *, const const char *)"
- "name": "cJSON_CreateStringArray"
  "params":
  - "name": "strings"
    "type": "bool "
  - "name": "count"
    "type": "int"
  "return_type": "void"
  "signature": "cJSON * cJSON_CreateStringArray(const const char **, int)"
- "name": "cJSON_DetachItemFromObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "string"
    "type": "bool "
  "return_type": "void"
  "signature": "cJSON * cJSON_DetachItemFromObject(cJSON *, const char *)"
- "name": "cJSON_Parse"
  "params":
  - "name": "value"
    "type": "bool "
  "return_type": "void"
  "signature": "cJSON * cJSON_Parse(const char *)"
- "name": "cJSON_DeleteItemFromArray"
  "params":
  - "name": "array"
    "type": "bool "
  - "name": "which"
    "type": "int"
  "return_type": "void"
  "signature": "void cJSON_DeleteItemFromArray(cJSON *, int)"
- "name": "cJSON_AddNullToObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  "return_type": "void"
  "signature": "cJSON * cJSON_AddNullToObject(const cJSON *, const const char *)"
- "name": "cJSON_AddItemToObjectCS"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "string"
    "type": "bool "
  - "name": "item"
    "type": "bool "
  "return_type": "int"
  "signature": "cJSON_bool cJSON_AddItemToObjectCS(cJSON *, const char *, cJSON *)"
- "name": "cJSON_AddItemToObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "string"
    "type": "bool "
  - "name": "item"
    "type": "bool "
  "return_type": "int"
  "signature": "cJSON_bool cJSON_AddItemToObject(cJSON *, const char *, cJSON *)"
- "name": "cJSON_CreateDoubleArray"
  "params":
  - "name": "numbers"
    "type": "bool "
  - "name": "count"
    "type": "int"
  "return_type": "void"
  "signature": "cJSON * cJSON_CreateDoubleArray(const double *, int)"
- "name": "cJSON_AddObjectToObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  "return_type": "void"
  "signature": "cJSON * cJSON_AddObjectToObject(const cJSON *, const const char *)"
- "name": "cJSON_Duplicate"
  "params":
  - "name": "item"
    "type": "bool "
  - "name": "recurse"
    "type": "int"
  "return_type": "void"
  "signature": "cJSON * cJSON_Duplicate(const cJSON *, cJSON_bool)"
- "name": "cJSON_HasObjectItem"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "string"
    "type": "bool "
  "return_type": "int"
  "signature": "cJSON_bool cJSON_HasObjectItem(const cJSON *, const char *)"
- "name": "cJSON_ReplaceItemInObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "string"
    "type": "bool "
  - "name": "newitem"
    "type": "bool "
  "return_type": "int"
  "signature": "cJSON_bool cJSON_ReplaceItemInObject(cJSON *, const char *, cJSON *)"
- "name": "cJSON_ReplaceItemInArray"
  "params":
  - "name": "array"
    "type": "bool "
  - "name": "which"
    "type": "int"
  - "name": "newitem"
    "type": "bool "
  "return_type": "int"
  "signature": "cJSON_bool cJSON_ReplaceItemInArray(cJSON *, int, cJSON *)"
- "name": "cJSON_DeleteItemFromObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "string"
    "type": "bool "
  "return_type": "void"
  "signature": "void cJSON_DeleteItemFromObject(cJSON *, const char *)"
- "name": "cJSON_ParseWithLength"
  "params":
  - "name": "value"
    "type": "bool "
  - "name": "buffer_length"
    "type": "size_t"
  "return_type": "void"
  "signature": "cJSON * cJSON_ParseWithLength(const char *, size_t)"
- "name": "cJSON_AddTrueToObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  "return_type": "void"
  "signature": "cJSON * cJSON_AddTrueToObject(const cJSON *, const const char *)"
- "name": "cJSON_AddRawToObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  - "name": "raw"
    "type": "bool "
  "return_type": "void"
  "signature": "cJSON * cJSON_AddRawToObject(const cJSON *, const const char *, const const char *)"
- "name": "cJSON_DetachItemFromObjectCaseSensitive"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "string"
    "type": "bool "
  "return_type": "void"
  "signature": "cJSON * cJSON_DetachItemFromObjectCaseSensitive(cJSON *, const char *)"
- "name": "cJSON_Compare"
  "params":
  - "name": "a"
    "type": "bool "
  - "name": "b"
    "type": "bool "
  - "name": "case_sensitive"
    "type": "int"
  "return_type": "int"
  "signature": "cJSON_bool cJSON_Compare(const const cJSON *, const const cJSON *, const cJSON_bool)"
- "name": "cJSON_CreateFloatArray"
  "params":
  - "name": "numbers"
    "type": "bool "
  - "name": "count"
    "type": "int"
  "return_type": "void"
  "signature": "cJSON * cJSON_CreateFloatArray(const float *, int)"
- "name": "cJSON_AddItemReferenceToObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "string"
    "type": "bool "
  - "name": "item"
    "type": "bool "
  "return_type": "int"
  "signature": "cJSON_bool cJSON_AddItemReferenceToObject(cJSON *, const char *, cJSON *)"
- "name": "cJSON_AddStringToObject"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  - "name": "string"
    "type": "bool "
  "return_type": "void"
  "signature": "cJSON * cJSON_AddStringToObject(const cJSON *, const const char *, const const char *)"
- "name": "cJSON_CreateIntArray"
  "params":
  - "name": "numbers"
    "type": "bool "
  - "name": "count"
    "type": "int"
  "return_type": "void"
  "signature": "cJSON * cJSON_CreateIntArray(const int *, int)"
- "name": "cJSON_DeleteItemFromObjectCaseSensitive"
  "params":
  - "name": "object"
    "type": "bool "
  - "name": "string"
    "type": "bool "
  "return_type": "void"
  "signature": "void cJSON_DeleteItemFromObjectCaseSensitive(cJSON *, const char *)"
"language": "c++"
"project": "cjson"
"target_name": "cjson_read_fuzzer"
"target_path": "/src/cjson/fuzzing/cjson_read_fuzzer.c"
"test_files":
- "test_file_path": "/src/cjson/tests/unity/extras/fixture/test/main/AllTests.c"
- "test_file_path": "/src/cjson/tests/parse_value.c"
- "test_file_path": "/src/cjson/tests/unity/extras/fixture/test/unity_output_Spy.c"
- "test_file_path": "/src/cjson/tests/print_value.c"
- "test_file_path": "/src/cjson/tests/unity/test/expectdata/testsample_cmd.c"
- "test_file_path": "/src/cjson/tests/unity/examples/example_3/test/TestProductionCode.c"
- "test_file_path": "/src/cjson/tests/print_string.c"
- "test_file_path": "/src/cjson/tests/unity/extras/fixture/test/unity_fixture_TestRunner.c"
- "test_file_path": "/src/cjson/tests/unity/examples/example_1/test/test_runners/TestProductionCode_Runner.c"
- "test_file_path": "/src/cjson/tests/unity/examples/example_2/test/test_runners/TestProductionCode2_Runner.c"
- "test_file_path": "/src/cjson/tests/unity/examples/example_1/test/TestProductionCode.c"
- "test_file_path": "/src/cjson/tests/parse_hex4.c"
- "test_file_path": "/src/cjson/tests/unity/test/expectdata/testsample_mock_param.c"
- "test_file_path": "/src/cjson/tests/unity/test/expectdata/testsample_head1.c"
- "test_file_path": "/src/cjson/tests/unity/examples/example_2/test/TestProductionCode.c"
- "test_file_path": "/src/cjson/tests/unity/extras/fixture/src/unity_fixture.c"
- "test_file_path": "/src/cjson/tests/compare_tests.c"
- "test_file_path": "/src/cjson/tests/unity/extras/fixture/test/template_fixture_tests.c"
- "test_file_path": "/src/cjson/tests/unity/test/expectdata/testsample_new2.c"
- "test_file_path": "/src/cjson/tests/unity/examples/example_1/test/test_runners/TestProductionCode2_Runner.c"
- "test_file_path": "/src/cjson/tests/unity/examples/example_2/src/ProductionCode2.c"
- "test_file_path": "/src/cjson/tests/unity/test/expectdata/testsample_def.c"
- "test_file_path": "/src/cjson/tests/unity/examples/example_1/test/TestProductionCode2.c"
- "test_file_path": "/src/cjson/tests/print_number.c"
- "test_file_path": "/src/cjson/tests/misc_utils_tests.c"
- "test_file_path": "/src/cjson/tests/unity/test/tests/testunity.c"
- "test_file_path": "/src/cjson/tests/unity/examples/example_3/test/TestProductionCode2.c"
- "test_file_path": "/src/cjson/tests/unity/test/expectdata/testsample_run1.c"
- "test_file_path": "/src/cjson/tests/unity/test/testdata/testRunnerGeneratorSmall.c"
- "test_file_path": "/src/cjson/tests/parse_object.c"
- "test_file_path": "/src/cjson/tests/misc_tests.c"
- "test_file_path": "/src/cjson/tests/old_utils_tests.c"
- "test_file_path": "/src/cjson/tests/unity/examples/example_2/src/ProductionCode.c"
- "test_file_path": "/src/cjson/tests/unity/test/expectdata/testsample_mock_yaml.c"
- "test_file_path": "/src/cjson/tests/unity/examples/example_3/helper/UnityHelper.c"
- "test_file_path": "/src/cjson/tests/unity/test/expectdata/testsample_mock_def.c"
- "test_file_path": "/src/cjson/tests/print_array.c"
- "test_file_path": "/src/cjson/test.c"
- "test_file_path": "/src/cjson/tests/minify_tests.c"
- "test_file_path": "/src/cjson/tests/json_patch_tests.c"
