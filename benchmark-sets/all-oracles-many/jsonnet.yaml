"functions":
- "name": "_ZN2c43yml4Tree5clearEv"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void c4::yml::Tree::clear()"
- "name": "_ZZN2c43yml7EmitterINS0_13WriterOStreamINSt3__118basic_stringstreamIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEE10_emit_yamlEmENKUlmE_clEm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "void c4::yml::Emitter<c4::yml::WriterOStream<std::__1::basic_stringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::operator()(const void *, size_t)"
- "name": "_ZN7jsonnet8internal18EnforceStringStyle5visitEPNS0_13LiteralStringE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void jsonnet::internal::EnforceStringStyle::visit(struct LiteralString *)"
- "name": "_ZN2c43yml4Tree5_swapEmm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "void c4::yml::Tree::_swap(size_t, size_t)"
- "name": "_ZN7jsonnet8internal14FixIndentation5specsERNSt3__16vectorINS0_17ComprehensionSpecENS2_9allocatorIS4_EEEERKNS1_6IndentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void jsonnet::internal::FixIndentation::specs(vector<jsonnet::internal::ComprehensionSpec, std::__1::allocator<jsonnet::internal::ComprehensionSpec> > &, const struct Indent &)"
- "name": "_ZN8nlohmann6detail28json_sax_dom_callback_parserINS_10basic_jsonINSt3__13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE4nullEv"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "bool"
  "signature": "bool nlohmann::detail::json_sax_dom_callback_parser<nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer> >::null(json_sax_dom_callback_parser<nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer> > *)"
- "name": "_ZN7jsonnet8internal13FixPlusObject9visitExprERPNS0_3ASTE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void jsonnet::internal::FixPlusObject::visitExpr(struct AST &*)"
- "name": "_ZN7jsonnet8internal14FixIndentation6fieldsERNSt3__16vectorINS0_11ObjectFieldENS2_9allocatorIS4_EEEERKNS1_6IndentEb"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool"
  "return_type": "void"
  "signature": "void jsonnet::internal::FixIndentation::fields(ObjectFields &, const struct Indent &, bool)"
- "name": "_ZN7jsonnet8internal11jsonnet_fmtEPNS0_3ASTERNSt3__16vectorINS0_13FodderElementENS3_9allocatorIS5_EEEERKNS0_7FmtOptsE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "string jsonnet::internal::jsonnet_fmt(struct AST *, Fodder &, const struct FmtOpts &)"
- "name": "_ZN2c43yml4TreeaSERKS1_"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "Tree & c4::yml::Tree::operator=(const Tree &)"
- "name": "_ZN2c43yml4Tree4moveEPS1_mmm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  "return_type": "size_t"
  "signature": "size_t c4::yml::Tree::move(Tree *, size_t, size_t, size_t)"
- "name": "_ZN2c43yml4Tree4moveEmmm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "void c4::yml::Tree::move(size_t, size_t, size_t)"
- "name": "_ZN2c43yml4Tree5_copyERKS1_"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void c4::yml::Tree::_copy(const Tree &)"
- "name": "_ZN7jsonnet8internal14FixIndentation4exprEPNS0_3ASTERKNS1_6IndentEb"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool"
  "return_type": "void"
  "signature": "void jsonnet::internal::FixIndentation::expr(struct AST *, const struct Indent &, bool)"
- "name": "_ZZN2c43yml7EmitterINS0_13WriterOStreamINSt3__119basic_ostringstreamIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEEEE10_emit_yamlEmENKUlmE_clEm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "void c4::yml::Emitter<c4::yml::WriterOStream<std::__1::basic_ostringstream<char, std::__1::char_traits<char>, std::__1::allocator<char> > > >::operator()(const void *, size_t)"
- "name": "_ZN2c43yml4TreeixENS_15basic_substringIKcEE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "NodeRef c4::yml::Tree::operator[](csubstr)"
- "name": "_ZNK2c43yml6Parser8locationENS0_12ConstNodeRefE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "struct Location c4::yml::Parser::location(ConstNodeRef)"
- "name": "_ZN7jsonnet8internal8Unparser7unparseEPKNS0_3ASTEb"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool"
  "return_type": "void"
  "signature": "void jsonnet::internal::Unparser::unparse(const struct AST *, bool)"
- "name": "_ZN8nlohmann6detail6parserINS_10basic_jsonINSt3__13mapENS3_6vectorENS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEEblmdS9_NS_14adl_serializerEEEE5parseEbRSD_"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void nlohmann::detail::parser<nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer> >::parse(parser<nlohmann::basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer> > *, const bool, basic_json<std::__1::map, std::__1::vector, std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >, bool, long, unsigned long, double, std::__1::allocator, nlohmann::adl_serializer> &)"
- "name": "jsonnet_evaluate_file"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "char * jsonnet_evaluate_file(struct JsonnetVm *, const char *, int *)"
- "name": "_ZN7jsonnet8internal13jsonnet_unlexERKNSt3__14listINS0_5TokenENS1_9allocatorIS3_EEEE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "string jsonnet::internal::jsonnet_unlex(const Tokens &)"
- "name": "jsonnet_evaluate_file_multi"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "char * jsonnet_evaluate_file_multi(struct JsonnetVm *, const char *, int *)"
- "name": "_ZN12_GLOBAL__N_115ReEscapeStrings5visitEPN7jsonnet8internal13LiteralStringE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void (anonymous namespace)::ReEscapeStrings::visit(struct LiteralString *)"
- "name": "_ZN7jsonnet8internal14FixIndentation11fieldParamsERNS0_11ObjectFieldERKNS1_6IndentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void jsonnet::internal::FixIndentation::fieldParams(struct ObjectField &, const struct Indent &)"
- "name": "_ZN2c43yml4TreeixEm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "NodeRef c4::yml::Tree::operator[](size_t)"
- "name": "_ZN2c43yml6ParseraSERKS1_"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "Parser & c4::yml::Parser::operator=(const Parser &)"
- "name": "_ZN7jsonnet8internal11FixNewlines6paramsERNSt3__16vectorINS0_13FodderElementENS2_9allocatorIS4_EEEERNS3_INS0_8ArgParamENS5_IS9_EEEES8_"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void jsonnet::internal::FixNewlines::params(Fodder &, ArgParams &, Fodder &)"
- "name": "_ZN7jsonnet8internal9ClonePass4exprERPNS0_3ASTE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void jsonnet::internal::ClonePass::expr(struct AST &*)"
- "name": "_ZN7jsonnet8internal14FixIndentation6paramsERNSt3__16vectorINS0_13FodderElementENS2_9allocatorIS4_EEEERNS3_INS0_8ArgParamENS5_IS9_EEEEbS8_RKNS1_6IndentE"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void jsonnet::internal::FixIndentation::params(Fodder &, ArgParams &, bool, Fodder &, const struct Indent &)"
- "name": "jsonnet_evaluate_file_stream"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "char * jsonnet_evaluate_file_stream(struct JsonnetVm *, const char *, int *)"
- "name": "_ZNK2c43yml6Parser8locationERKNS0_4TreeEm"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "struct Location c4::yml::Parser::location(const Tree &, size_t)"
"language": "c++"
"project": "jsonnet"
"target_name": "convert_jsonnet_fuzzer_stream"
"target_path": "/src/convert_jsonnet_fuzzer_stream.cc"
"test_files":
- "test_file_path": "/src/jsonnet/cpp/libjsonnet++_test.cpp"
- "test_file_path": "/src/jsonnet/core/lexer_test.cpp"
- "test_file_path": "/src/jsonnet/test_cmd/version2.golden.stdout.cpp"
- "test_file_path": "/src/jsonnet/test_cmd/max_stack4.golden.stderr.cpp"
- "test_file_path": "/src/jsonnet/test_cmd/simple4.golden.stderr.cpp"
- "test_file_path": "/src/jsonnet/core/parser_test.cpp"
- "test_file_path": "/src/jsonnet/core/libjsonnet_test_file.c"
- "test_file_path": "/src/jsonnet/test_cmd/version1.golden.stdout.cpp"
- "test_file_path": "/src/jsonnet/core/libjsonnet_test_snippet.c"
- "test_file_path": "/src/jsonnet/core/libjsonnet_test.cpp"
- "test_file_path": "/src/jsonnet/cpp/libjsonnet_test_locale.cpp"
- "test_file_path": "/usr/share/cmake-3.16/Modules/FindMPI/test_mpi.c"
- "test_file_path": "/src/jsonnet/test_cmd/no_args.golden.stderr.cpp"
- "test_file_path": "/src/jsonnet/test_cmd/help.golden.stdout.cpp"
