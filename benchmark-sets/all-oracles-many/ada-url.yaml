"functions":
- "name": "_ZN2tl6detail18expected_move_baseIN3ada14url_aggregatorENS2_6errorsELb0EEC2ERKS5_"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "rhs"
    "type": "bool "
  "return_type": "void"
  "signature": "void tl::detail::expected_move_base<ada::url_aggregator, ada::errors, false>::expected_move_base(struct expected_move_base<ada::url_aggregator, ada::errors, false> *, const struct expected_move_base<ada::url_aggregator, ada::errors, false> &)"
- "name": "_ZNK3ada3url16has_valid_domainEv"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool ada::url::has_valid_domain(const struct url *)"
- "name": "_ZNK3ada14url_aggregator10get_originEv"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "string ada::url_aggregator::get_origin(const struct url_aggregator *)"
- "name": "ada_idna_to_unicode"
  "params":
  - "name": "input"
    "type": "bool "
  - "name": "length"
    "type": "size_t"
  "return_type": "void"
  "signature": "struct ada_owned_string ada_idna_to_unicode(const char *, size_t)"
- "name": "_ZN3ada14url_aggregator31set_scheme_from_view_with_colonENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEE"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "new_scheme_with_colon"
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "void ada::url_aggregator::set_scheme_from_view_with_colon(struct url_aggregator *, string_view)"
- "name": "_ZNK3ada14url_aggregator16has_valid_domainEv"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool ada::url_aggregator::has_valid_domain(const struct url_aggregator *)"
- "name": "ada_search_params_to_string"
  "params":
  - "name": "result"
    "type": "bool "
  "return_type": "void"
  "signature": "struct ada_owned_string ada_search_params_to_string(ada_url_search_params)"
- "name": "ada_search_params_get_keys"
  "params":
  - "name": "result"
    "type": "bool "
  "return_type": "void"
  "signature": "ada_url_search_params_keys_iter ada_search_params_get_keys(ada_url_search_params)"
- "name": "_ZN2tl6detail25expected_move_assign_baseIN3ada14url_aggregatorENS2_6errorsELb0EEC2ERKS5_"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "rhs"
    "type": "bool "
  "return_type": "void"
  "signature": "void tl::detail::expected_move_assign_base<ada::url_aggregator, ada::errors, false>::expected_move_assign_base(struct expected_move_assign_base<ada::url_aggregator, ada::errors, false> *, const struct expected_move_assign_base<ada::url_aggregator, ada::errors, false> &)"
- "name": "_ZN3ada9to_stringENS_5stateE"
  "params":
  - "name": "state"
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "string ada::to_string(DW_TAG_enumeration_typestate)"
- "name": "_ZN3ada14url_aggregator10parse_ipv6ENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEE"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "input"
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "bool"
  "signature": "bool ada::url_aggregator::parse_ipv6(struct url_aggregator *, string_view)"
- "name": "_ZN2tl6detail18expected_copy_baseIN3ada14url_aggregatorENS2_6errorsELb0EEC2ERKS5_"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "rhs"
    "type": "bool "
  "return_type": "void"
  "signature": "void tl::detail::expected_copy_base<ada::url_aggregator, ada::errors, false>::expected_copy_base(struct expected_copy_base<ada::url_aggregator, ada::errors, false> *, const struct expected_copy_base<ada::url_aggregator, ada::errors, false> &)"
- "name": "_ZN3ada4idna8to_asciiENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEE"
  "params":
  - "name": "ut8_string"
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "string ada::idna::to_ascii(string_view)"
- "name": "_ZN3ada6parser9parse_urlINS_14url_aggregatorEEET_NSt3__117basic_string_viewIcNS4_11char_traitsIcEEEEPKS3_"
  "params":
  - "name": "user_input"
    "type": "bool "
  - "name": "base_url"
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "struct url ada::url_aggregator ada::parser::parse_url<ada::parse_url<ada::url>(string_view, const struct url *)"
- "name": "_ZNK3ada14url_aggregator9to_stringEv"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "string ada::url_aggregator::to_string(const struct url_aggregator *)"
- "name": "_ZN3ada14url_aggregator10set_schemeENSt3__117basic_string_viewIcNS1_11char_traitsIcEEEE"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "new_scheme"
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "void"
  "signature": "void ada::url_aggregator::set_scheme(struct url_aggregator *, string_view)"
- "name": "ada_search_params_get_all"
  "params":
  - "name": "result"
    "type": "bool "
  - "name": "key"
    "type": "bool "
  - "name": "key_length"
    "type": "size_t"
  "return_type": "void"
  "signature": "ada_strings ada_search_params_get_all(ada_url_search_params, const char *, size_t)"
- "name": "_ZNK3ada3url10get_originEv"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "string ada::url::get_origin(const struct url *)"
- "name": "ada_parse_with_base"
  "params":
  - "name": "input"
    "type": "bool "
  - "name": "input_length"
    "type": "size_t"
  - "name": "base"
    "type": "bool "
  - "name": "base_length"
    "type": "size_t"
  "return_type": "void"
  "signature": "ada_url ada_parse_with_base(const char *, size_t, const char *, size_t)"
- "name": "ada_free_strings"
  "params":
  - "name": "result"
    "type": "bool "
  "return_type": "void"
  "signature": "void ada_free_strings(ada_strings)"
- "name": "ada_parse_search_params"
  "params":
  - "name": "input"
    "type": "bool "
  - "name": "length"
    "type": "size_t"
  "return_type": "void"
  "signature": "ada_url_search_params ada_parse_search_params(const char *, size_t)"
- "name": "_ZNK3ada3url9to_stringEv"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "string ada::url::to_string(const struct url *)"
- "name": "_ZN3ada6parser9parse_urlINS_3urlEEET_NSt3__117basic_string_viewIcNS4_11char_traitsIcEEEEPKS3_"
  "params":
  - "name": "user_input"
    "type": "bool "
  - "name": "base_url"
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "struct url ada::url ada::parser::parse_url<ada::parse_url<ada::url>(string_view, const struct url *)"
- "name": "_ZN2tl6detail25expected_copy_assign_baseIN3ada14url_aggregatorENS2_6errorsELb0EEC2ERKS5_"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "rhs"
    "type": "bool "
  "return_type": "void"
  "signature": "void tl::detail::expected_copy_assign_base<ada::url_aggregator, ada::errors, false>::expected_copy_assign_base(struct expected_copy_assign_base<ada::url_aggregator, ada::errors, false> *, const struct expected_copy_assign_base<ada::url_aggregator, ada::errors, false> &)"
- "name": "_ZN2tl8expectedIN3ada14url_aggregatorENS1_6errorsEEC2ERKS4_"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "rhs"
    "type": "bool "
  "return_type": "void"
  "signature": "void tl::expected<ada::url_aggregator, ada::errors>::expected(expected<ada::url_aggregator, ada::errors> *, const expected<ada::url_aggregator, ada::errors> &)"
- "name": "ada_search_params_get_values"
  "params":
  - "name": "result"
    "type": "bool "
  "return_type": "void"
  "signature": "ada_url_search_params_values_iter ada_search_params_get_values(ada_url_search_params)"
- "name": "ada_copy"
  "params":
  - "name": "input"
    "type": "bool "
  "return_type": "void"
  "signature": "ada_url ada_copy(ada_url)"
- "name": "ada_search_params_get"
  "params":
  - "name": "result"
    "type": "bool "
  - "name": "key"
    "type": "bool "
  - "name": "key_length"
    "type": "size_t"
  "return_type": "void"
  "signature": "struct ada_string ada_search_params_get(ada_url_search_params, const char *, size_t)"
- "name": "ada_idna_to_ascii"
  "params":
  - "name": "input"
    "type": "bool "
  - "name": "length"
    "type": "size_t"
  "return_type": "void"
  "signature": "struct ada_owned_string ada_idna_to_ascii(const char *, size_t)"
- "name": "ada_search_params_get_entries"
  "params":
  - "name": "result"
    "type": "bool "
  "return_type": "void"
  "signature": "ada_url_search_params_entries_iter ada_search_params_get_entries(ada_url_search_params)"
- "name": "_ZN3ada14url_aggregator10clear_hashEv"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "void"
  "signature": "void ada::url_aggregator::clear_hash(struct url_aggregator *)"
- "name": "ada_can_parse_with_base"
  "params":
  - "name": "input"
    "type": "bool "
  - "name": "input_length"
    "type": "size_t"
  - "name": "base"
    "type": "bool "
  - "name": "base_length"
    "type": "size_t"
  "return_type": "bool"
  "signature": "bool ada_can_parse_with_base(const char *, size_t, const char *, size_t)"
- "name": "ada_free_search_params"
  "params":
  - "name": "result"
    "type": "bool "
  "return_type": "void"
  "signature": "void ada_free_search_params(ada_url_search_params)"
- "name": "_ZN2tl6detail25expected_move_assign_baseIN3ada17url_search_paramsENS2_6errorsELb0EECI2NS0_21expected_storage_baseIS3_S4_Lb0ELb1EEEIJS3_ELPv0EEENS_10in_place_tEDpOT_"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void tl::detail::expected_move_assign_base<ada::url_search_params, ada::errors, false>::expected_storage_base<ada::expected_storage_base(struct expected_move_assign_base<ada::url, ada::errors, false> *, struct unexpect_t, DW_TAG_rvalue_reference_typeDW_TAG_enumeration_typeerrors)"
"language": "c++"
"project": "ada-url"
"target_name": "url_search_params"
"target_path": "/src/ada-url/fuzz/url_search_params.cc"
"test_files":
- "test_file_path": "/src/ada-url/tests/basic_tests.cpp"
- "test_file_path": "/src/ada-url/tests/from_file_tests.cpp"
- "test_file_path": "/usr/share/cmake-3.16/Modules/FindMPI/test_mpi.c"
- "test_file_path": "/src/ada-url/tests/wpt_tests.cpp"
