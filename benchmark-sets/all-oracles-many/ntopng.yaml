"functions":
- "name": "_ZN15ParserInterface11processFlowEP10ParsedFlow"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "zflow"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool ParserInterface::processFlow(ParsedFlow *)"
- "name": "_ZN21ZMQCollectorInterface9purgeIdleElbb"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "when"
    "type": "size_t"
  - "name": "force_idle"
    "type": "bool"
  - "name": "full_scan"
    "type": "bool"
  "return_type": "void"
  "signature": "void ZMQCollectorInterface::purgeIdle(time_t, bool, bool)"
- "name": "_ZN13PcapInterfaceC2EPKchb"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  - "name": "ifIdx"
    "type": "char"
  - "name": "_delete_pcap_when_done"
    "type": "bool"
  "return_type": "void"
  "signature": "void PcapInterface::PcapInterface(const char *, u_int8_t, bool)"
- "name": "_ZN19CustomFlowLuaScript7flowEndEP4Flow"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "f"
    "type": "bool "
  "return_type": "void"
  "signature": "void CustomFlowLuaScript::flowEnd(Flow *)"
- "name": "_ZN18SQLiteStoreManager4initEPKc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "db_file_full_path"
    "type": "bool "
  "return_type": "int"
  "signature": "int SQLiteStoreManager::init(const char *)"
- "name": "_ZN15VirtualHostHash3getEPc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "vhost_name"
    "type": "bool "
  "return_type": "void"
  "signature": "VirtualHost * VirtualHostHash::get(char *)"
- "name": "_ZN21ZMQCollectorInterface13collect_flowsEv"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "void"
  "signature": "void ZMQCollectorInterface::collect_flows()"
- "name": "_ZN18ZMQParserInterface14preprocessFlowEP10ParsedFlow"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "flow"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool ZMQParserInterface::preprocessFlow(ParsedFlow *)"
- "name": "_ZN4Host15setResolvedNameEPKc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "resolved_name"
    "type": "bool "
  "return_type": "void"
  "signature": "void Host::setResolvedName(const char *)"
- "name": "_ZN18ZMQParserInterface12parseTLVFlowEPKcijjPv"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "payload"
    "type": "bool "
  - "name": "payload_size"
    "type": "int"
  - "name": "source_id"
    "type": "int"
  - "name": "msg_id"
    "type": "int"
  - "name": "data"
    "type": "bool "
  "return_type": "char"
  "signature": "u_int8_t ZMQParserInterface::parseTLVFlow(const char *, int, u_int32_t, u_int32_t, void *)"
- "name": "_ZN13PcapInterface17processNextPacketEP4pcapii"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "pd"
    "type": "bool "
  - "name": "if_index"
    "type": "int"
  - "name": "datalink_type"
    "type": "int"
  "return_type": "bool"
  "signature": "bool PcapInterface::processNextPacket(pcap_t *, int32_t, int)"
- "name": "_ZN14DummyInterfaceC2Ev"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "void"
  "signature": "void DummyInterface::DummyInterface()"
- "name": "_ZN5Bloom6setBitEPc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "str"
    "type": "bool "
  "return_type": "void"
  "signature": "void Bloom::setBit(char *)"
- "name": "_ZN12ZMQPublisherC2EPc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "endpoint"
    "type": "bool "
  "return_type": "void"
  "signature": "void ZMQPublisher::ZMQPublisher(char *)"
- "name": "_ZN4Host8get_cityEPcj"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "buf"
    "type": "bool "
  - "name": "buf_len"
    "type": "int"
  "return_type": "void"
  "signature": "char * Host::get_city(char *, u_int)"
- "name": "_ZN13ViewInterface11viewDequeueEj"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "budget"
    "type": "int"
  "return_type": "size_t"
  "signature": "u_int64_t ViewInterface::viewDequeue(u_int)"
- "name": "_ZN18ZMQParserInterface18parseSingleTLVFlowEP15ndpi_serializerj"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "deserializer"
    "type": "bool "
  - "name": "source_id"
    "type": "int"
  "return_type": "int"
  "signature": "int ZMQParserInterface::parseSingleTLVFlow(ndpi_serializer *, u_int32_t)"
- "name": "_ZN19CustomFlowLuaScript16protocolDetectedEP4Flow"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "f"
    "type": "bool "
  "return_type": "void"
  "signature": "void CustomFlowLuaScript::protocolDetected(Flow *)"
- "name": "_ZN4Ntop5startEv"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "void"
  "signature": "void Ntop::start()"
- "name": "_ZN4Host15get_visual_nameEPcj"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "buf"
    "type": "bool "
  - "name": "buf_len"
    "type": "int"
  "return_type": "void"
  "signature": "char * Host::get_visual_name(char *, u_int)"
- "name": "_ZN13ViewInterfaceC2EPKc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "_endpoint"
    "type": "bool "
  "return_type": "void"
  "signature": "void ViewInterface::ViewInterface(const char *)"
- "name": "_ZN19CustomFlowLuaScript14periodicUpdateEP4Flow"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "f"
    "type": "bool "
  "return_type": "void"
  "signature": "void CustomFlowLuaScript::periodicUpdate(Flow *)"
- "name": "_ZN15StringFifoQueue7enqueueEPc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "item"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool StringFifoQueue::enqueue(char *)"
- "name": "_ZN4Host16setBlacklistNameEPc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  "return_type": "void"
  "signature": "void Host::setBlacklistName(char *)"
- "name": "_ZN4Host11get_countryEPcj"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "buf"
    "type": "bool "
  - "name": "buf_len"
    "type": "int"
  "return_type": "void"
  "signature": "char * Host::get_country(char *, u_int)"
- "name": "_ZN5Bloom8unsetBitEPc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "str"
    "type": "bool "
  "return_type": "void"
  "signature": "void Bloom::unsetBit(char *)"
- "name": "_ZN5Prefs12loadFromFileEPKc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "path"
    "type": "bool "
  "return_type": "int"
  "signature": "int Prefs::loadFromFile(const char *)"
- "name": "_ZN13ViewInterface18startPacketPollingEv"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "void"
  "signature": "void ViewInterface::startPacketPolling()"
- "name": "_ZN5Trace12set_log_fileEPKc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "log_file"
    "type": "bool "
  "return_type": "void"
  "signature": "void Trace::set_log_file(const char *)"
- "name": "_ZL12flowPollLoopPv"
  "params":
  - "name": "ptr"
    "type": "bool "
  "return_type": "void"
  "signature": "void * flowPollLoop(void *)"
- "name": "_ZN24SyslogCollectorInterfaceC2EPKc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "_endpoint"
    "type": "bool "
  "return_type": "void"
  "signature": "void SyslogCollectorInterface::SyslogCollectorInterface(const char *)"
- "name": "_ZN4Ntop22createRuntimeInterfaceEPcS0_Pi"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  - "name": "source"
    "type": "bool "
  - "name": "iface_id"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool Ntop::createRuntimeInterface(char *, char *, int *)"
- "name": "_ZN18ZMQParserInterface19parseSingleJSONFlowEP11json_objectj"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "o"
    "type": "bool "
  - "name": "source_id"
    "type": "int"
  "return_type": "int"
  "signature": "int ZMQParserInterface::parseSingleJSONFlow(json_object *, u_int32_t)"
- "name": "_ZN5Bloom8isSetBitEPc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "str"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool Bloom::isSetBit(char *)"
- "name": "_ZN5Prefs4helpEv"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "void"
  "signature": "void Prefs::help()"
- "name": "_ZN21ZMQCollectorInterfaceC2EPKc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "_endpoint"
    "type": "bool "
  "return_type": "void"
  "signature": "void ZMQCollectorInterface::ZMQCollectorInterface(const char *)"
- "name": "_ZN13ViewInterface19viewed_flows_walkerEP4FlowPK7timeval"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "f"
    "type": "bool "
  - "name": "tv"
    "type": "bool "
  "return_type": "void"
  "signature": "void ViewInterface::viewed_flows_walker(Flow *, const struct timeval *)"
- "name": "_ZN5Prefs9setOptionEiPc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "optkey"
    "type": "int"
  - "name": "optarg"
    "type": "bool "
  "return_type": "int"
  "signature": "int Prefs::setOption(int, char *)"
- "name": "_ZN13ViewInterface12flowPollLoopEv"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "void"
  "signature": "void ViewInterface::flowPollLoop()"
- "name": "_ZN5Redis16popHostToResolveEPcj"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "hostname"
    "type": "bool "
  - "name": "hostname_len"
    "type": "int"
  "return_type": "int"
  "signature": "int Redis::popHostToResolve(char *, u_int)"
"language": "c++"
"project": "ntopng"
"target_name": "fuzz_dissect_packet"
"target_path": "/src/ntopng/fuzz/fuzz_dissect_packet.cpp"
"test_files":
- "test_file_path": "/src/json-c-json-c-0.17-20230812/tests/test4.c"
- "test_file_path": "/src/ntopng/third-party/speedtest.c"
- "test_file_path": "/src/ntopng/third-party/json-c/tests/test_charcase.c"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_hwm.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_term_endpoint.cpp"
- "test_file_path": "/src/json-c-json-c-0.17-20230812/tests/test_parse.c"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_proxy_single_socket.cpp"
- "test_file_path": "/src/libprotobuf-mutator/examples/libxml2/libxml2_example_test.cc"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_msg_flags.cpp"
- "test_file_path": "/src/json-c-json-c-0.17-20230812/tests/test2.c"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_pub_invert_matching.cpp"
- "test_file_path": "/src/ntopng/third-party/json-c/tests/test_visit.c"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_spec_req.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_rebind_ipc.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_capabilities.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_metadata.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_getsockopt_memset.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_channel.cpp"
- "test_file_path": "/src/json-c-json-c-0.17-20230812/tests/test_parse_int64.c"
- "test_file_path": "/src/ntopng/third-party/snmp/test.c"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_client_server.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_pair_ipc.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_mock_pub_sub.cpp"
- "test_file_path": "/src/zeromq-4.3.5/unittests/unittest_mtrie.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_ancillaries.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_hiccup_msg.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_pubsub_topics_count.cpp"
- "test_file_path": "/src/json-c-json-c-0.17-20230812/tests/test_json_pointer.c"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_many_sockets.cpp"
- "test_file_path": "/src/json-c-json-c-0.17-20230812/tests/test_json_patch.c"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_xpub_verbose.cpp"
- "test_file_path": "/src/json-c-json-c-0.17-20230812/tests/test_compare.c"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_bind_after_connect_tcp.cpp"
- "test_file_path": "/src/libmaxminddb-1.7.1/t/maxminddb_test_helper.c"
- "test_file_path": "/src/zeromq-4.3.5/unittests/unittest_ypipe.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_ws_transport.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_timers.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/test_proxy.cpp"
- "test_file_path": "/src/zeromq-4.3.5/tests/testutil_security.cpp"
- "test_file_path": "/src/zeromq-4.3.5/unittests/unittest_radix_tree.cpp"
