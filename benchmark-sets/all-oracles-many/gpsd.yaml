"functions":
- "name": "netgnss_uri_open"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "size_t"
  "signature": "gps_fd_t netgnss_uri_open(struct gps_device_t *, char *)"
- "name": "ntrip_open"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "size_t"
  "signature": "socket_t ntrip_open(struct gps_device_t *, char *)"
- "name": "netgnss_report"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void netgnss_report(struct gps_context_t *, struct gps_device_t *, struct gps_device_t *)"
- "name": "gpsd_multipoll"
  "params":
  - "name": ""
    "type": "bool"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "float"
  "return_type": "int"
  "signature": "int gpsd_multipoll(const _Bool, struct gps_device_t *, DW_TAG_subroutine_typeInfinite loop *, float)"
- "name": "gpsd_wrap"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void gpsd_wrap(struct gps_device_t *)"
- "name": "ais_binary_decode"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "bool"
  "signature": "bool ais_binary_decode(const struct gpsd_errout_t *, struct ais_t *, const unsigned char *, size_t, struct ais_type24_queue_t *)"
- "name": "pps_thread_activate"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void pps_thread_activate(struct DW_TAG_volatile_typepps_thread_t *)"
- "name": "gps_unpack"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int gps_unpack(const char *, struct gps_data_t *)"
- "name": "gpsd_interpret_subframe_raw"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "size_t"
  "signature": "gps_mask_t gpsd_interpret_subframe_raw(struct gps_device_t *, unsigned int, unsigned int, unsigned int, uint32_t *, unsigned int)"
- "name": "gps_read"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int gps_read(struct gps_data_t *, char *, int)"
- "name": "generic_parse_input"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "size_t"
  "signature": "gps_mask_t generic_parse_input(struct gps_device_t *)"
- "name": "dgpsip_open"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "size_t"
  "signature": "socket_t dgpsip_open(struct gps_device_t *, const char *)"
- "name": "rtcm3_unpack"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void rtcm3_unpack(const struct gps_context_t *, struct rtcm3_t *, const unsigned char *)"
- "name": "navcom_parse"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "size_t"
  "signature": "gps_mask_t navcom_parse(struct gps_device_t *, unsigned char *, size_t)"
- "name": "gps_open"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int gps_open(const char *, const char *, struct gps_data_t *)"
- "name": "gpsd_poll"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "size_t"
  "signature": "gps_mask_t gpsd_poll(struct gps_device_t *)"
- "name": "garmintxt_parse"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "size_t"
  "signature": "gps_mask_t garmintxt_parse(struct gps_device_t *)"
- "name": "gpsd_set_speed"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "char"
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "void gpsd_set_speed(struct gps_device_t *, speed_t, char, unsigned int)"
- "name": "gpsd_next_hunt_setting"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "bool"
  "signature": "bool gpsd_next_hunt_setting(struct gps_device_t *)"
- "name": "gpsd_serial_open"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int gpsd_serial_open(struct gps_device_t *)"
- "name": "gpsd_activate"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int gpsd_activate(struct gps_device_t *, const int)"
- "name": "gpsd_open"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int gpsd_open(struct gps_device_t *)"
- "name": "gps_mainloop"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int gps_mainloop(struct gps_data_t *, int, DW_TAG_subroutine_typeInfinite loop *)"
- "name": "ntrip_report"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void ntrip_report(struct gps_context_t *, struct gps_device_t *, struct gps_device_t *)"
- "name": "rtcm2_unpack"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void rtcm2_unpack(struct gps_device_t *, struct rtcm2_t *, char *)"
- "name": "nmea_parse"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "size_t"
  "signature": "gps_mask_t nmea_parse(char *, struct gps_device_t *)"
- "name": "sirf_parse"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "size_t"
  "signature": "gps_mask_t sirf_parse(struct gps_device_t *, unsigned char *, size_t)"
- "name": "garmin_ser_parse"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "size_t"
  "signature": "gps_mask_t garmin_ser_parse(struct gps_device_t *)"
- "name": "parse_input"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "size_t"
  "signature": "gps_mask_t parse_input(struct gps_device_t *)"
- "name": "gpsd_deactivate"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void gpsd_deactivate(struct gps_device_t *)"
"language": "c"
"project": "gpsd"
"target_name": "FuzzJson"
"target_path": "/src/gpsd/fuzzer/FuzzJson.c"
"test_files":
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_58.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_36.c"
- "test_file_path": "/src/gpsd/tests/test_bits.c"
- "test_file_path": "/src/gpsd/tests/test_mktime.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_48.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_31.c"
- "test_file_path": "/src/gpsd/tests/test_matrix.c"
- "test_file_path": "/src/gpsd/tests/test_timespec.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_47.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_38.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_49.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_19.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_42.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_52.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_41.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_46.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_24.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_8.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_28.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_50.c"
- "test_file_path": "/src/gpsd/contrib/clock_test.c"
- "test_file_path": "/src/gpsd/tests/test_trig.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_51.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_54.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_23.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_29.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_30.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_27.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_17.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_61.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_22.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_26.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_0.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_14.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_1.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_16.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_13.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_33.c"
- "test_file_path": "/src/gpsd/.sconf_temp/conftest_35.c"
- "test_file_path": "/src/gpsd/tests/test_json.c"
