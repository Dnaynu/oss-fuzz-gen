"functions":
- "name": "mg_set_request_handler"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "uri"
    "type": "bool "
  - "name": "handler"
    "type": "bool "
  - "name": "cbdata"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_set_request_handler(struct mg_context *, const char *, mg_request_handler, void *)"
- "name": "mg_get_system_info"
  "params":
  - "name": "buffer"
    "type": "bool "
  - "name": "buflen"
    "type": "int"
  "return_type": "int"
  "signature": "int mg_get_system_info(char *, int)"
- "name": "mg_send_mime_file2"
  "params":
  - "name": "conn"
    "type": "bool "
  - "name": "path"
    "type": "bool "
  - "name": "mime_type"
    "type": "bool "
  - "name": "additional_headers"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_send_mime_file2(struct mg_connection *, const char *, const char *, const char *)"
- "name": "mg_set_websocket_handler"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "uri"
    "type": "bool "
  - "name": "connect_handler"
    "type": "bool "
  - "name": "ready_handler"
    "type": "bool "
  - "name": "data_handler"
    "type": "bool "
  - "name": "close_handler"
    "type": "bool "
  - "name": "cbdata"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_set_websocket_handler(struct mg_context *, const char *, mg_websocket_connect_handler, mg_websocket_ready_handler, mg_websocket_data_handler, mg_websocket_close_handler, void *)"
- "name": "mg_set_websocket_handler_with_subprotocols"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "uri"
    "type": "bool "
  - "name": "subprotocols"
    "type": "bool "
  - "name": "connect_handler"
    "type": "bool "
  - "name": "ready_handler"
    "type": "bool "
  - "name": "data_handler"
    "type": "bool "
  - "name": "close_handler"
    "type": "bool "
  - "name": "cbdata"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_set_websocket_handler_with_subprotocols(struct mg_context *, const char *, struct mg_websocket_subprotocols *, mg_websocket_connect_handler, mg_websocket_ready_handler, mg_websocket_data_handler, mg_websocket_close_handler, void *)"
- "name": "mg_split_form_urlencoded"
  "params":
  - "name": "data"
    "type": "bool "
  - "name": "form_fields"
    "type": "bool "
  - "name": "num_form_fields"
    "type": "int"
  "return_type": "int"
  "signature": "int mg_split_form_urlencoded(char *, struct mg_header *, unsigned int)"
- "name": "mg_check_digest_access_authentication"
  "params":
  - "name": "conn"
    "type": "bool "
  - "name": "realm"
    "type": "bool "
  - "name": "filename"
    "type": "bool "
  "return_type": "int"
  "signature": "int mg_check_digest_access_authentication(struct mg_connection *, const char *, const char *)"
- "name": "mg_start_domain2"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "options"
    "type": "bool "
  - "name": "error"
    "type": "bool "
  "return_type": "int"
  "signature": "int mg_start_domain2(struct mg_context *, const char **, struct mg_error_data *)"
- "name": "mg_connect_client_secure"
  "params":
  - "name": "client_options"
    "type": "bool "
  - "name": "error_buffer"
    "type": "bool "
  - "name": "error_buffer_size"
    "type": "size_t"
  "return_type": "void"
  "signature": "struct mg_connection * mg_connect_client_secure(const struct mg_client_options *, char *, size_t)"
- "name": "mg_set_auth_handler"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "uri"
    "type": "bool "
  - "name": "handler"
    "type": "bool "
  - "name": "cbdata"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_set_auth_handler(struct mg_context *, const char *, mg_authorization_handler, void *)"
- "name": "mg_send_http_ok"
  "params":
  - "name": "conn"
    "type": "bool "
  - "name": "mime_type"
    "type": "bool "
  - "name": "content_length"
    "type": "size_t"
  "return_type": "int"
  "signature": "int mg_send_http_ok(struct mg_connection *, const char *, long long)"
- "name": "mg_send_file"
  "params":
  - "name": "conn"
    "type": "bool "
  - "name": "path"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_send_file(struct mg_connection *, const char *)"
- "name": "mg_send_digest_access_authentication_request"
  "params":
  - "name": "conn"
    "type": "bool "
  - "name": "realm"
    "type": "bool "
  "return_type": "int"
  "signature": "int mg_send_digest_access_authentication_request(struct mg_connection *, const char *)"
- "name": "mg_handle_form_request"
  "params":
  - "name": "conn"
    "type": "bool "
  - "name": "fdh"
    "type": "bool "
  "return_type": "int"
  "signature": "int mg_handle_form_request(struct mg_connection *, struct mg_form_data_handler *)"
- "name": "mg_send_chunk"
  "params":
  - "name": "conn"
    "type": "bool "
  - "name": "chunk"
    "type": "bool "
  - "name": "chunk_len"
    "type": "int"
  "return_type": "int"
  "signature": "int mg_send_chunk(struct mg_connection *, const char *, unsigned int)"
- "name": "mg_store_body"
  "params":
  - "name": "conn"
    "type": "bool "
  - "name": "path"
    "type": "bool "
  "return_type": "size_t"
  "signature": "long long mg_store_body(struct mg_connection *, const char *)"
- "name": "mg_get_var2"
  "params":
  - "name": "data"
    "type": "bool "
  - "name": "data_len"
    "type": "size_t"
  - "name": "name"
    "type": "bool "
  - "name": "dst"
    "type": "bool "
  - "name": "dst_len"
    "type": "size_t"
  - "name": "occurrence"
    "type": "size_t"
  "return_type": "int"
  "signature": "int mg_get_var2(const char *, size_t, const char *, char *, size_t, size_t)"
- "name": "mg_download"
  "params":
  - "name": "host"
    "type": "bool "
  - "name": "port"
    "type": "int"
  - "name": "use_ssl"
    "type": "int"
  - "name": "ebuf"
    "type": "bool "
  - "name": "ebuf_len"
    "type": "size_t"
  - "name": "fmt"
    "type": "bool "
  "return_type": "void"
  "signature": "struct mg_connection * mg_download(const char *, int, int, char *, size_t, const char *, void)"
- "name": "mg_cry"
  "params":
  - "name": "conn"
    "type": "bool "
  - "name": "fmt"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_cry(const struct mg_connection *, const char *, void)"
- "name": "mg_send_file_body"
  "params":
  - "name": "conn"
    "type": "bool "
  - "name": "path"
    "type": "bool "
  "return_type": "int"
  "signature": "int mg_send_file_body(struct mg_connection *, const char *)"
- "name": "mg_start_domain"
  "params":
  - "name": "ctx"
    "type": "bool "
  - "name": "options"
    "type": "bool "
  "return_type": "int"
  "signature": "int mg_start_domain(struct mg_context *, const char **)"
- "name": "mg_send_mime_file"
  "params":
  - "name": "conn"
    "type": "bool "
  - "name": "path"
    "type": "bool "
  - "name": "mime_type"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_send_mime_file(struct mg_connection *, const char *, const char *)"
- "name": "mg_modify_passwords_file"
  "params":
  - "name": "fname"
    "type": "bool "
  - "name": "domain"
    "type": "bool "
  - "name": "user"
    "type": "bool "
  - "name": "pass"
    "type": "bool "
  "return_type": "int"
  "signature": "int mg_modify_passwords_file(const char *, const char *, const char *, const char *)"
- "name": "mg_get_var"
  "params":
  - "name": "data"
    "type": "bool "
  - "name": "data_len"
    "type": "size_t"
  - "name": "name"
    "type": "bool "
  - "name": "dst"
    "type": "bool "
  - "name": "dst_len"
    "type": "size_t"
  "return_type": "int"
  "signature": "int mg_get_var(const char *, size_t, const char *, char *, size_t)"
- "name": "mg_modify_passwords_file_ha1"
  "params":
  - "name": "fname"
    "type": "bool "
  - "name": "domain"
    "type": "bool "
  - "name": "user"
    "type": "bool "
  - "name": "ha1"
    "type": "bool "
  "return_type": "int"
  "signature": "int mg_modify_passwords_file_ha1(const char *, const char *, const char *, const char *)"
"language": "c"
"project": "civetweb"
"target_name": "civetweb_fuzz3"
"target_path": "/src/civetweb/fuzztest/fuzzmain.c"
"test_files":
- "test_file_path": "/src/civetweb/unittest/timertest.c"
- "test_file_path": "/src/civetweb/unittest/cgi_test.c"
- "test_file_path": "/src/civetweb/unittest/testclient.c"
