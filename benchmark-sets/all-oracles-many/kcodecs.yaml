"functions":
- "name": "_ZN10QByteArray7prependEPKc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "s"
    "type": "bool "
  "return_type": "void"
  "signature": "QByteArray & QByteArray::prepend(const char *)"
- "name": "_Z21qMetaTypeTypeInternalPKc"
  "params":
  - "name": "typeName"
    "type": "bool "
  "return_type": "int"
  "signature": "int qMetaTypeTypeInternal(const char *)"
- "name": "_ZNK13QMimeDatabase26mimeTypeForFileNameAndDataERK7QStringRK10QByteArray"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "fileName"
    "type": "bool "
  - "name": "data"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QMimeType QMimeDatabase::mimeTypeForFileNameAndData(const QString &, const QByteArray &)"
- "name": "_ZNK13QMimeDatabase15mimeTypeForFileERK7QStringNS_9MatchModeE"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "fileName"
    "type": "bool "
  - "name": "mode"
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "QMimeType QMimeDatabase::mimeTypeForFile(const QString &, DW_TAG_enumeration_typeMatchMode)"
- "name": "_ZNK13QMimeDatabase15mimeTypeForDataERK10QByteArray"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "data"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QMimeType QMimeDatabase::mimeTypeForData(const QByteArray &)"
- "name": "_ZN20QMimeDatabasePrivate15mimeTypeForFileERK7QStringRK9QFileInfoN13QMimeDatabase9MatchModeE"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "fileName"
    "type": "bool "
  - "name": "fileInfo"
    "type": "bool "
  - "name": "mode"
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "QMimeType QMimeDatabasePrivate::mimeTypeForFile(const QString &, const QFileInfo &, DW_TAG_enumeration_typeMatchMode)"
- "name": "_ZN12QJsonPrivate7Variant11toJsonArrayERK5QListI8QVariantE"
  "params":
  - "name": "list"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QJsonArray QJsonPrivate::Variant::toJsonArray(const QVariantList &)"
- "name": "_ZN23QCoreApplicationPrivate13checkInstanceEPKc"
  "params":
  - "name": "function"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool QCoreApplicationPrivate::checkInstance(const char *)"
- "name": "_ZNK13QStaticPlugin8metaDataEv"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QJsonObject QStaticPlugin::metaData(const struct QStaticPlugin *)"
- "name": "_ZNK13QMimeDatabase26mimeTypeForFileNameAndDataERK7QStringP9QIODevice"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "fileName"
    "type": "bool "
  - "name": "device"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QMimeType QMimeDatabase::mimeTypeForFileNameAndData(const QString &, QIODevice *)"
- "name": "_ZN11QMetaObject14normalizedTypeEPKc"
  "params":
  - "name": "type"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QByteArray QMetaObject::normalizedType(const char *)"
- "name": "_ZN10QJsonArray15fromVariantListERK5QListI8QVariantE"
  "params":
  - "name": "list"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QJsonArray QJsonArray::fromVariantList(const QVariantList &)"
- "name": "_ZNK3$_07convertEPKviPvi"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "from"
    "type": "bool "
  - "name": "fromTypeId"
    "type": "int"
  - "name": "to"
    "type": "bool "
  - "name": "toTypeId"
    "type": "int"
  "return_type": "bool"
  "signature": "bool $_0::convert(const struct void *, const void *, int, void *, int)"
- "name": "_ZN18QMetaObjectPrivate31parameterTypeNamesFromSignatureEPKc"
  "params":
  - "name": "signature"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QList<QByteArray> QMetaObjectPrivate::parameterTypeNamesFromSignature(const char *)"
- "name": "_ZN13QPluginLoader4loadEv"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool QPluginLoader::load()"
- "name": "_ZN12QJsonPrivate7Variant12toJsonObjectERK4QMapI7QString8QVariantE"
  "params":
  - "name": "map"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QJsonObject QJsonPrivate::Variant::toJsonObject(const QVariantMap &)"
- "name": "_ZN20QMimeDatabasePrivate10findByDataERK10QByteArrayPi"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "data"
    "type": "bool "
  - "name": "accuracyPtr"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QMimeType QMimeDatabasePrivate::findByData(const QByteArray &, int *)"
- "name": "_ZN15QLibraryPrivate8isPluginEv"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool QLibraryPrivate::isPlugin()"
- "name": "_ZNK13QMimeDatabase15mimeTypeForDataEP9QIODevice"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "device"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QMimeType QMimeDatabase::mimeTypeForData(QIODevice *)"
- "name": "_ZN15QLibraryPrivate17updatePluginStateEv"
  "params":
  - "name": "this"
    "type": "bool "
  "return_type": "void"
  "signature": "void QLibraryPrivate::updatePluginState()"
- "name": "_Z7qgetenvPKc"
  "params":
  - "name": "varName"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QByteArray qgetenv(const char *)"
- "name": "_ZNK13QMimeDatabase20mimeTypesForFileNameERK7QString"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "fileName"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QList<QMimeType> QMimeDatabase::mimeTypesForFileName(const QString &)"
- "name": "_ZN10QByteArraypLEPKc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "s"
    "type": "bool "
  "return_type": "void"
  "signature": "QByteArray & QByteArray::operator+=(const char *)"
- "name": "_ZNK13QMimeDatabase14mimeTypeForUrlERK4QUrl"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "url"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QMimeType QMimeDatabase::mimeTypeForUrl(const QUrl &)"
- "name": "_ZN20QMimeDatabasePrivate12mimeInheritsERK7QStringS2_"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "mime"
    "type": "bool "
  - "name": "parent"
    "type": "bool "
  "return_type": "bool"
  "signature": "bool QMimeDatabasePrivate::mimeInherits(const QString &, const QString &)"
- "name": "_ZN10QByteArray6appendEPKc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "s"
    "type": "bool "
  "return_type": "void"
  "signature": "QByteArray & QByteArray::append(const char *)"
- "name": "_ZN11QMetaObject19normalizedSignatureEPKc"
  "params":
  - "name": "method"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QByteArray QMetaObject::normalizedSignature(const char *)"
- "name": "_ZNK7QObject8propertyEPKc"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "name"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QVariant QObject::property(const char *)"
- "name": "_ZNK13QMimeDatabase15mimeTypeForFileERK9QFileInfoNS_9MatchModeE"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "fileInfo"
    "type": "bool "
  - "name": "mode"
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "QMimeType QMimeDatabase::mimeTypeForFile(const QFileInfo &, DW_TAG_enumeration_typeMatchMode)"
- "name": "_ZN14QFactoryLoader18setExtraSearchPathERK7QString"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "path"
    "type": "bool "
  "return_type": "void"
  "signature": "void QFactoryLoader::setExtraSearchPath(const QString &)"
- "name": "_ZN20QMimeDatabasePrivate24mimeTypeForFileExtensionERK7QString"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "fileName"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QMimeType QMimeDatabasePrivate::mimeTypeForFileExtension(const QString &)"
- "name": "_ZN11QJsonObject15fromVariantHashERK5QHashI7QString8QVariantE"
  "params":
  - "name": "hash"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QJsonObject QJsonObject::fromVariantHash(const QVariantHash &)"
- "name": "_ZZN20QMimeDatabasePrivate26mimeTypeForFileNameAndDataERK7QStringP9QIODeviceENK3$_0clES4_"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "device"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QMimeType QMimeDatabasePrivate::operator()(const void *, QIODevice *)"
- "name": "_ZNK14QFactoryLoader6keyMapEv"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QMultiMap<int, QString> QFactoryLoader::keyMap()"
- "name": "_ZNK14QFactoryLoader8metaDataEv"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "MetaDataList QFactoryLoader::metaData()"
- "name": "_ZN10QJsonValue11fromVariantERK8QVariant"
  "params":
  - "name": "variant"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QJsonValue QJsonValue::fromVariant(const QVariant &)"
- "name": "_ZN20QMimeDatabasePrivate26mimeTypeForFileNameAndDataERK7QStringP9QIODevice"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "fileName"
    "type": "bool "
  - "name": "device"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QMimeType QMimeDatabasePrivate::mimeTypeForFileNameAndData(const QString &, QIODevice *)"
- "name": "_ZN13QJsonDocument11fromVariantERK8QVariant"
  "params":
  - "name": "variant"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QJsonDocument QJsonDocument::fromVariant(const QVariant &)"
- "name": "_ZN20QMimeDatabasePrivate15mimeTypeForDataEP9QIODevice"
  "params":
  - "name": "this"
    "type": "bool "
  - "name": "device"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QMimeType QMimeDatabasePrivate::mimeTypeForData(QIODevice *)"
- "name": "_ZN11QJsonObject14fromVariantMapERK4QMapI7QString8QVariantE"
  "params":
  - "name": "map"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "QJsonObject QJsonObject::fromVariantMap(const QVariantMap &)"
"language": "c++"
"project": "kcodecs"
"target_name": "kcodecs_fuzzer"
"target_path": "/src/kcodecs_fuzzer.cc"
"test_files":
- "test_file_path": "/src/qtbase/tests/auto/corelib/io/qurlinternal/utf8data.cpp"
- "test_file_path": "/src/qtbase/tests/manual/embeddedintoforeignwindow/itemwindow.cpp"
- "test_file_path": "/src/qtbase/examples/sql/drilldown/informationwindow.cpp"
- "test_file_path": "/src/qtbase/tests/manual/markdown/html2md.cpp"
- "test_file_path": "/src/qtbase/tests/auto/gui/text/qtextmarkdownimporter/tst_qtextmarkdownimporter.cpp"
- "test_file_path": "/src/qtbase/tests/manual/rhi/cubemap_scissor/cubemap_scissor.cpp"
- "test_file_path": "/src/qtbase/tests/manual/highdpi/dprgadget/main.cpp"
- "test_file_path": "/src/qtbase/tests/auto/corelib/io/qfileinfo/tst_qfileinfo.cpp"
- "test_file_path": "/src/qtbase/examples/widgets/painting/transformations/renderarea.cpp"
- "test_file_path": "/src/qtbase/tests/auto/dbus/qdbusreply/tst_qdbusreply.cpp"
- "test_file_path": "/src/qtbase/tests/manual/rhi/triquadcube/trianglerenderer.cpp"
- "test_file_path": "/src/qtbase/tests/manual/examples/widgets/tutorials/addressbook/part2/main.cpp"
- "test_file_path": "/src/qtbase/examples/qtconcurrent/imagescaling/imagescaling.cpp"
- "test_file_path": "/src/qtbase/tests/benchmarks/widgets/graphicsview/functional/GraphicsViewBenchmark/widgets/simplelistview.cpp"
- "test_file_path": "/src/qtbase/tests/manual/qgraphicsitem/main.cpp"
- "test_file_path": "/src/qtbase/tests/manual/examples/widgets/mainwindows/mainwindow/colorswatch.cpp"
- "test_file_path": "/src/qtbase/tests/auto/corelib/tools/qcontiguouscache/tst_qcontiguouscache.cpp"
- "test_file_path": "/src/qtbase/tests/auto/cmake/test_add_resources_binary_generated/main.cpp"
- "test_file_path": "/src/qtbase/tests/auto/cmake/test_static_resources/test_static_resources_propagation/main.cpp"
- "test_file_path": "/src/qtbase/cmake/tests/empty.cpp"
- "test_file_path": "/src/qtbase/examples/network/blockingfortuneclient/fortunethread.cpp"
- "test_file_path": "/src/qtbase/tests/auto/gui/text/qinputcontrol/tst_qinputcontrol.cpp"
- "test_file_path": "/src/qtbase/tests/auto/widgets/widgets/qmdiarea/tst_qmdiarea.cpp"
- "test_file_path": "/src/qtbase/tests/auto/gui/text/qtextformat/tst_qtextformat.cpp"
- "test_file_path": "/src/qtbase/tests/auto/cmake/mockplugins/mock6plugin/qmock6plugin.cpp"
- "test_file_path": "/src/qtbase/examples/corelib/ipc/sharedmemory/dialog.cpp"
- "test_file_path": "/src/qtbase/tests/benchmarks/corelib/io/qiodevice/tst_bench_qiodevice.cpp"
- "test_file_path": "/src/qtbase/tests/auto/widgets/kernel/qwidgetrepaintmanager/tst_qwidgetrepaintmanager.cpp"
- "test_file_path": "/src/qtbase/examples/network/secureudpserver/mainwindow.cpp"
- "test_file_path": "/src/qtbase/config.tests/static_link_order/objlib.cpp"
- "test_file_path": "/src/qtbase/examples/widgets/painting/shared/hoverpoints.cpp"
- "test_file_path": "/src/qtbase/examples/sql/masterdetail/main.cpp"
- "test_file_path": "/src/qtbase/examples/widgets/rhi/cuberhiwidget/main.cpp"
- "test_file_path": "/src/qtbase/tests/manual/examples/opengl/qopenglwindow/background_renderer.cpp"
- "test_file_path": "/src/qtbase/tests/manual/examples/widgets/richtext/calendar/mainwindow.cpp"
- "test_file_path": "/src/qtbase/tests/auto/corelib/io/qurlquery/tst_qurlquery.cpp"
- "test_file_path": "/src/qtbase/tests/manual/examples/widgets/tutorials/addressbook/part4/main.cpp"
- "test_file_path": "/src/qtbase/tests/auto/corelib/global/qglobal/tst_qglobal.cpp"
- "test_file_path": "/usr/share/cmake-3.16/Modules/FindMPI/test_mpi.c"
- "test_file_path": "/src/qtbase/tests/manual/socketengine/main.cpp"
