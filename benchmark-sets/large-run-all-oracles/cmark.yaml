"functions":
- "name": "cmark_node_is_leaf"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "bool"
  "signature": "bool cmark_node_is_leaf(cmark_node *)"
- "name": "cmark_node_new"
  "params":
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "cmark_node * cmark_node_new(cmark_node_type)"
- "name": "cmark_node_check"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int cmark_node_check(cmark_node *, FILE *)"
- "name": "cmark_node_replace"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int cmark_node_replace(cmark_node *, cmark_node *)"
- "name": "cmark_node_previous"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "cmark_node * cmark_node_previous(cmark_node *)"
- "name": "cmark_node_set_list_start"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int cmark_node_set_list_start(cmark_node *, int)"
- "name": "cmark_node_set_user_data"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int cmark_node_set_user_data(cmark_node *, void *)"
- "name": "cmark_node_next"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "cmark_node * cmark_node_next(cmark_node *)"
- "name": "cmark_node_insert_after"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int cmark_node_insert_after(cmark_node *, cmark_node *)"
- "name": "cmark_node_get_user_data"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void * cmark_node_get_user_data(cmark_node *)"
- "name": "cmark_node_get_on_exit"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "const char * cmark_node_get_on_exit(cmark_node *)"
- "name": "cmark_node_set_on_enter"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int cmark_node_set_on_enter(cmark_node *, const char *)"
- "name": "cmark_node_last_child"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "cmark_node * cmark_node_last_child(cmark_node *)"
- "name": "cmark_node_get_on_enter"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "const char * cmark_node_get_on_enter(cmark_node *)"
- "name": "cmark_node_set_on_exit"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int cmark_node_set_on_exit(cmark_node *, const char *)"
- "name": "cmark_node_append_child"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int cmark_node_append_child(cmark_node *, cmark_node *)"
- "name": "cmark_node_prepend_child"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int cmark_node_prepend_child(cmark_node *, cmark_node *)"
- "name": "cmark_node_set_title"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int cmark_node_set_title(cmark_node *, const char *)"
- "name": "cmark_node_first_child"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "cmark_node * cmark_node_first_child(cmark_node *)"
- "name": "cmark_node_set_url"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int cmark_node_set_url(cmark_node *, const char *)"
- "name": "cmark_node_set_list_type"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int cmark_node_set_list_type(cmark_node *, cmark_list_type)"
- "name": "cmark_iter_get_event_type"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "cmark_event_type cmark_iter_get_event_type(cmark_iter *)"
- "name": "cmark_node_set_fence_info"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int cmark_node_set_fence_info(cmark_node *, const char *)"
- "name": "cmark_node_set_list_delim"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int cmark_node_set_list_delim(cmark_node *, cmark_delim_type)"
- "name": "cmark_node_new_with_mem"
  "params":
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "cmark_node * cmark_node_new_with_mem(cmark_node_type, cmark_mem *)"
- "name": "cmark_node_set_list_tight"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int cmark_node_set_list_tight(cmark_node *, int)"
- "name": "cmark_iter_get_root"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "cmark_node * cmark_iter_get_root(cmark_iter *)"
- "name": "cmark_node_set_heading_level"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int cmark_node_set_heading_level(cmark_node *, int)"
"language": "c++"
"project": "cmark"
"target_name": "cmark_fuzzer"
"target_path": "/src/cmark/fuzz/cmark-fuzz.c"
