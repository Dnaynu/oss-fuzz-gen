"functions":
- "name": "mg_mqtt_pub"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "opts"
    "type": "bool "
  "return_type": "short"
  "signature": "uint16_t mg_mqtt_pub(struct mg_connection *, const struct mg_mqtt_opts *)"
- "name": "mg_rpc_list"
  "params":
  - "name": "r"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_rpc_list(struct mg_rpc_req *)"
- "name": "mg_mqtt_disconnect"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "opts"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_mqtt_disconnect(struct mg_connection *, const struct mg_mqtt_opts *)"
- "name": "mg_ws_printf"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "op"
    "type": "int"
  - "name": "fmt"
    "type": "bool "
  "return_type": "size_t"
  "signature": "size_t mg_ws_printf(struct mg_connection *, int, const char *, void)"
- "name": "mg_ws_upgrade"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "hm"
    "type": "bool "
  - "name": "fmt"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_ws_upgrade(struct mg_connection *, struct mg_http_message *, const char *, void)"
- "name": "mg_mqtt_sub"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "opts"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_mqtt_sub(struct mg_connection *, const struct mg_mqtt_opts *)"
- "name": "mg_ws_send"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "buf"
    "type": "bool "
  - "name": "len"
    "type": "size_t"
  - "name": "op"
    "type": "int"
  "return_type": "size_t"
  "signature": "size_t mg_ws_send(struct mg_connection *, const void *, size_t, int)"
- "name": "mg_rpc_verr"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "code"
    "type": "int"
  - "name": "fmt"
    "type": "bool "
  - "name": "ap"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_rpc_verr(struct mg_rpc_req *, int, const char *, va_list *)"
- "name": "mg_mqtt_connect"
  "params":
  - "name": "mgr"
    "type": "bool "
  - "name": "url"
    "type": "bool "
  - "name": "opts"
    "type": "bool "
  - "name": "fn"
    "type": "bool "
  - "name": "fn_data"
    "type": "bool "
  "return_type": "void"
  "signature": "struct mg_connection * mg_mqtt_connect(struct mg_mgr *, const char *, const struct mg_mqtt_opts *, mg_event_handler_t, void *)"
- "name": "mg_rpc_process"
  "params":
  - "name": "r"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_rpc_process(struct mg_rpc_req *)"
- "name": "mg_hello"
  "params":
  - "name": "url"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_hello(const char *)"
- "name": "mg_json_get_str"
  "params":
  - "name": "json"
    "type": "bool "
  - "name": "path"
    "type": "size_t"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "char * mg_json_get_str(struct mg_str, const char *)"
- "name": "mg_rpc_vok"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "fmt"
    "type": "bool "
  - "name": "ap"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_rpc_vok(struct mg_rpc_req *, const char *, va_list *)"
- "name": "mg_mqtt_login"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "opts"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_mqtt_login(struct mg_connection *, const struct mg_mqtt_opts *)"
- "name": "mg_http_printf_chunk"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "fmt"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_http_printf_chunk(struct mg_connection *, const char *, void)"
- "name": "mg_rpc_err"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "code"
    "type": "int"
  - "name": "fmt"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_rpc_err(struct mg_rpc_req *, int, const char *, void)"
- "name": "mg_ws_connect"
  "params":
  - "name": "mgr"
    "type": "bool "
  - "name": "url"
    "type": "bool "
  - "name": "fn"
    "type": "bool "
  - "name": "fn_data"
    "type": "bool "
  - "name": "fmt"
    "type": "bool "
  "return_type": "void"
  "signature": "struct mg_connection * mg_ws_connect(struct mg_mgr *, const char *, mg_event_handler_t, void *, const char *, void)"
- "name": "mg_sntp_connect"
  "params":
  - "name": "mgr"
    "type": "bool "
  - "name": "url"
    "type": "bool "
  - "name": "fn"
    "type": "bool "
  - "name": "fnd"
    "type": "bool "
  "return_type": "void"
  "signature": "struct mg_connection * mg_sntp_connect(struct mg_mgr *, const char *, mg_event_handler_t, void *)"
- "name": "mg_ws_vprintf"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "op"
    "type": "int"
  - "name": "fmt"
    "type": "bool "
  - "name": "ap"
    "type": "bool "
  "return_type": "size_t"
  "signature": "size_t mg_ws_vprintf(struct mg_connection *, int, const char *, va_list *)"
- "name": "mg_http_upload"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "hm"
    "type": "bool "
  - "name": "fs"
    "type": "bool "
  - "name": "dir"
    "type": "bool "
  - "name": "max_size"
    "type": "size_t"
  "return_type": "size_t"
  "signature": "long mg_http_upload(struct mg_connection *, struct mg_http_message *, struct mg_fs *, const char *, size_t)"
- "name": "mg_http_creds"
  "params":
  - "name": "hm"
    "type": "bool "
  - "name": "user"
    "type": "bool "
  - "name": "userlen"
    "type": "size_t"
  - "name": "pass"
    "type": "bool "
  - "name": "passlen"
    "type": "size_t"
  "return_type": "void"
  "signature": "void mg_http_creds(struct mg_http_message *, char *, size_t, char *, size_t)"
- "name": "mg_sntp_request"
  "params":
  - "name": "c"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_sntp_request(struct mg_connection *)"
- "name": "mg_rpc_ok"
  "params":
  - "name": "r"
    "type": "bool "
  - "name": "fmt"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_rpc_ok(struct mg_rpc_req *, const char *, void)"
- "name": "mg_mqtt_ping"
  "params":
  - "name": "nc"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_mqtt_ping(struct mg_connection *)"
- "name": "mg_mqtt_pong"
  "params":
  - "name": "nc"
    "type": "bool "
  "return_type": "void"
  "signature": "void mg_mqtt_pong(struct mg_connection *)"
- "name": "mg_json_get_hex"
  "params":
  - "name": "json"
    "type": "bool "
  - "name": "path"
    "type": "size_t"
  - "name": "slen"
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "char * mg_json_get_hex(struct mg_str, const char *, int *)"
- "name": "mg_http_write_chunk"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "buf"
    "type": "bool "
  - "name": "len"
    "type": "size_t"
  "return_type": "void"
  "signature": "void mg_http_write_chunk(struct mg_connection *, const char *, size_t)"
- "name": "mg_mqtt_send_header"
  "params":
  - "name": "c"
    "type": "bool "
  - "name": "cmd"
    "type": "char"
  - "name": "flags"
    "type": "char"
  - "name": "len"
    "type": "int"
  "return_type": "void"
  "signature": "void mg_mqtt_send_header(struct mg_connection *, uint8_t, uint8_t, uint32_t)"
"language": "c++"
"project": "mongoose"
"target_name": "fuzz"
"target_path": "/src/mongoose/test/fuzz.c"
