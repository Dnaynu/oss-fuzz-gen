"functions":
- "name": "evdns_base_nameserver_add"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "size_t"
  "return_type": "int"
  "signature": "int evdns_base_nameserver_add(struct evdns_base *, unsigned long)"
- "name": "evhttp_bind_listener"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "struct evhttp_bound_socket * evhttp_bind_listener(struct evhttp *, struct evconnlistener *)"
- "name": "evhttp_make_request"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int evhttp_make_request(struct evhttp_connection *, struct evhttp_request *, DW_TAG_enumeration_typeevhttp_cmd_type, const char *)"
- "name": "evhttp_connection_fail_"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "void evhttp_connection_fail_(struct evhttp_connection *, DW_TAG_enumeration_typeevhttp_request_error)"
- "name": "evhttp_send_page_"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void evhttp_send_page_(struct evhttp_request *, struct evbuffer *)"
- "name": "evhttp_connection_base_bufferevent_unix_new"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "struct evhttp_connection * evhttp_connection_base_bufferevent_unix_new(struct event_base *, struct bufferevent *, const char *)"
- "name": "evhttp_encode_uri"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "char * evhttp_encode_uri(const char *)"
- "name": "evhttp_cancel_request"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void evhttp_cancel_request(struct evhttp_request *)"
- "name": "evhttp_send_reply"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void evhttp_send_reply(struct evhttp_request *, int, const char *, struct evbuffer *)"
- "name": "evdns_resolv_conf_parse"
  "params":
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int evdns_resolv_conf_parse(int, const const char *)"
- "name": "evhttp_accept_socket"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int evhttp_accept_socket(struct evhttp *, int)"
- "name": "evhttp_start_read_"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void evhttp_start_read_(struct evhttp_connection *)"
- "name": "evdns_base_nameserver_sockaddr_add"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "int"
  "return_type": "int"
  "signature": "int evdns_base_nameserver_sockaddr_add(struct evdns_base *, const struct sockaddr *, socklen_t, unsigned int)"
- "name": "evhttp_send_reply_chunk_with_cb"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void evhttp_send_reply_chunk_with_cb(struct evhttp_request *, struct evbuffer *, DW_TAG_subroutine_typeInfinite loop *, void *)"
- "name": "evhttp_connection_connect_"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int evhttp_connection_connect_(struct evhttp_connection *)"
- "name": "evdns_resolve_ipv4"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int evdns_resolve_ipv4(const char *, int, evdns_callback_type, void *)"
- "name": "evhttp_uri_parse_with_flags"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "struct evhttp_uri * evhttp_uri_parse_with_flags(const char *, unsigned int)"
- "name": "evhttp_start"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "short"
  "return_type": "void"
  "signature": "struct evhttp * evhttp_start(const char *, uint16_t)"
- "name": "evhttp_bind_socket_with_handle"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "short"
  "return_type": "void"
  "signature": "struct evhttp_bound_socket * evhttp_bind_socket_with_handle(struct evhttp *, const char *, uint16_t)"
- "name": "evhttp_send_error"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void evhttp_send_error(struct evhttp_request *, int, const char *)"
- "name": "evhttp_send_reply_end"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void evhttp_send_reply_end(struct evhttp_request *)"
- "name": "evhttp_send_reply_chunk"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void evhttp_send_reply_chunk(struct evhttp_request *, struct evbuffer *)"
- "name": "evdns_resolve_ipv6"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  "return_type": "int"
  "signature": "int evdns_resolve_ipv6(const char *, int, evdns_callback_type, void *)"
- "name": "evhttp_accept_socket_with_handle"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "struct evhttp_bound_socket * evhttp_accept_socket_with_handle(struct evhttp *, int)"
- "name": "evhttp_start_write_"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void evhttp_start_write_(struct evhttp_connection *)"
- "name": "evhttp_start_ws_"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "struct bufferevent * evhttp_start_ws_(struct evhttp_request *)"
- "name": "evhttp_send_reply_start"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "void evhttp_send_reply_start(struct evhttp_request *, int, const char *)"
- "name": "evhttp_connection_base_bufferevent_new"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "short"
  "return_type": "void"
  "signature": "struct evhttp_connection * evhttp_connection_base_bufferevent_new(struct event_base *, struct evdns_base *, struct bufferevent *, const char *, unsigned short)"
- "name": "evhttp_connection_base_new"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "short"
  "return_type": "void"
  "signature": "struct evhttp_connection * evhttp_connection_base_new(struct event_base *, struct evdns_base *, const char *, uint16_t)"
- "name": "evhttp_uri_parse"
  "params":
  - "name": ""
    "type": "bool "
  "return_type": "void"
  "signature": "struct evhttp_uri * evhttp_uri_parse(const char *)"
- "name": "evhttp_bind_socket"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "short"
  "return_type": "int"
  "signature": "int evhttp_bind_socket(struct evhttp *, const char *, uint16_t)"
- "name": "evws_new_session"
  "params":
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "bool "
  - "name": ""
    "type": "int"
  "return_type": "void"
  "signature": "struct evws_connection * evws_new_session(struct evhttp_request *, ws_on_msg_cb, void *, int)"
"language": "c++"
"project": "libevent"
"target_name": "utils_fuzzer"
"target_path": "/src/utils_fuzzer.cc"
