functions:
- name: _ZN2mu17ParserTokenReader11IsStrVarTokERNS_11ParserTokenIdNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: bool
  signature: bool mu::ParserTokenReader::IsStrVarTok(token_type &)
- name: _ZN2mu10ParserBaseC2ERKS0_
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserBase::ParserBase(const ParserBase &)
- name: _ZN2mu11ParserErrorC2ERKS0_
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserError::ParserError(const ParserError &)
- name: _ZN2mu10ParserBase10DefineOprtERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPFdddEjNS_18EOprtAssociativityEb
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: int
  - name: ''
    type: int
  - name: ''
    type: bool
  return_type: void
  signature: void mu::ParserBase::DefineOprt(const string_type &, fun_type2, unsigned
    int, DW_TAG_enumeration_typeEOprtAssociativity, bool)
- name: _ZN2mu10ParserBaseaSERKS0_
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: ParserBase & mu::ParserBase::operator=(const ParserBase &)
- name: _ZNK2mu17ParserTokenReader5CloneEPNS_10ParserBaseE
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: ParserTokenReader * mu::ParserTokenReader::Clone(ParserBase *)
- name: _ZN2mu10ParserBase17EnableBuiltInOprtEb
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: bool
  return_type: void
  signature: void mu::ParserBase::EnableBuiltInOprt(bool)
- name: _ZN2mu17ParserTokenReaderC2ERKS0_
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserTokenReader::ParserTokenReader(const ParserTokenReader
    &)
- name: _ZN2mu11ParserErrorC2Ev
  params:
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserError::ParserError()
- name: _ZN2mu10ParserBase15EnableOptimizerEb
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: bool
  return_type: void
  signature: void mu::ParserBase::EnableOptimizer(bool)
- name: _ZN2mu17ParserTokenReader6AssignERKS0_
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserTokenReader::Assign(const ParserTokenReader &)
- name: _ZN2mu17ParserTokenReaderaSERKS0_
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: ParserTokenReader & mu::ParserTokenReader::operator=(const ParserTokenReader
    &)
- name: _ZN2mu10ParserBase14DefineStrConstERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEES9_
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserBase::DefineStrConst(const string_type &, const string_type
    &)
- name: _ZN2mu10ParserBase9DefineVarERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPd
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserBase::DefineVar(const string_type &, value_type *)
- name: _ZNK2mu11ParserTokenIdNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEE6GetIdxEv
  params:
  - name: ''
    type: 'bool '
  return_type: int
  signature: int mu::ParserToken<double, std::__1::basic_string<char, std::__1::char_traits<char>,
    std::__1::allocator<char> > >::GetIdx(const ParserToken<double, std::__1::basic_string<char,
    std::__1::char_traits<char>, std::__1::allocator<char> > > *)
- name: _ZN2mu11ParserErrorC2EPKciRKNSt3__112basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEE
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: int
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserError::ParserError(const char_type *, int, const string_type
    &)
- name: _ZN2mu10ParserBase9RemoveVarERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserBase::RemoveVar(const string_type &)
- name: _ZN2mu10ParserBase11SetByteCodeERKNS_14ParserByteCodeE
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserBase::SetByteCode(const ParserByteCode &)
- name: _ZN2mu17ParserTokenReader8IsVarTokERNS_11ParserTokenIdNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: bool
  signature: bool mu::ParserTokenReader::IsVarTok(token_type &)
- name: _ZN2mu10ParserBase6AssignERKS0_
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserBase::Assign(const ParserBase &)
- name: _ZN2mu11ParserErrorC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void mu::ParserError::ParserError(const string_type &)
- name: _ZN2mu10ParserBase17DefinePostfixOprtERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEPFddEb
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: bool
  return_type: void
  signature: void mu::ParserBase::DefinePostfixOprt(const string_type &, fun_type1,
    bool)
- name: _ZN2mu17ParserTokenReader13IsUndefVarTokERNS_11ParserTokenIdNSt3__112basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEEEE
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: bool
  signature: bool mu::ParserTokenReader::IsUndefVarTok(token_type &)
language: c++
project: muparser
target_name: set_eval_fuzzer
target_path: /src/set_eval_fuzzer.cc
