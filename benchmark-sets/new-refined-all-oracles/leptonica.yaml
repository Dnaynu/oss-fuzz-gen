functions:
- name: WebPDecodeYUV
  params:
  - name: data
    type: 'bool '
  - name: data_size
    type: size_t
  - name: width
    type: 'bool '
  - name: height
    type: 'bool '
  - name: u
    type: 'bool '
  - name: v
    type: 'bool '
  - name: stride
    type: 'bool '
  - name: uv_stride
    type: 'bool '
  return_type: void
  signature: uint8_t * WebPDecodeYUV(const uint8_t *, size_t, int *, int *, uint8_t
    **, uint8_t **, int *, int *)
- name: WebPDecodeRGB
  params:
  - name: data
    type: 'bool '
  - name: data_size
    type: size_t
  - name: width
    type: 'bool '
  - name: height
    type: 'bool '
  return_type: void
  signature: uint8_t * WebPDecodeRGB(const uint8_t *, size_t, int *, int *)
- name: TIFFSetSubDirectory
  params:
  - name: tif
    type: 'bool '
  - name: diroff
    type: size_t
  return_type: int
  signature: int TIFFSetSubDirectory(TIFF *, uint64_t)
- name: WebPDecodeARGBInto
  params:
  - name: data
    type: 'bool '
  - name: data_size
    type: size_t
  - name: output
    type: 'bool '
  - name: size
    type: size_t
  - name: stride
    type: int
  return_type: void
  signature: uint8_t * WebPDecodeARGBInto(const uint8_t *, size_t, uint8_t *, size_t,
    int)
- name: WebPDecodeBGR
  params:
  - name: data
    type: 'bool '
  - name: data_size
    type: size_t
  - name: width
    type: 'bool '
  - name: height
    type: 'bool '
  return_type: void
  signature: uint8_t * WebPDecodeBGR(const uint8_t *, size_t, int *, int *)
- name: pixRead
  params:
  - name: filename
    type: 'bool '
  return_type: void
  signature: PIX * pixRead(const char *)
- name: WebPDecodeRGBInto
  params:
  - name: data
    type: 'bool '
  - name: data_size
    type: size_t
  - name: output
    type: 'bool '
  - name: size
    type: size_t
  - name: stride
    type: int
  return_type: void
  signature: uint8_t * WebPDecodeRGBInto(const uint8_t *, size_t, uint8_t *, size_t,
    int)
- name: WebPDecodeARGB
  params:
  - name: data
    type: 'bool '
  - name: data_size
    type: size_t
  - name: width
    type: 'bool '
  - name: height
    type: 'bool '
  return_type: void
  signature: uint8_t * WebPDecodeARGB(const uint8_t *, size_t, int *, int *)
- name: png_image_finish_read
  params:
  - name: image
    type: 'bool '
  - name: background
    type: 'bool '
  - name: buffer
    type: 'bool '
  - name: row_stride
    type: int
  - name: colormap
    type: 'bool '
  return_type: int
  signature: int png_image_finish_read(png_imagep, png_const_colorp, void *, png_int_32,
    void *)
- name: WebPDecodeBGRA
  params:
  - name: data
    type: 'bool '
  - name: data_size
    type: size_t
  - name: width
    type: 'bool '
  - name: height
    type: 'bool '
  return_type: void
  signature: uint8_t * WebPDecodeBGRA(const uint8_t *, size_t, int *, int *)
- name: bmfCreate
  params:
  - name: dir
    type: 'bool '
  - name: fontsize
    type: int
  return_type: void
  signature: L_BMF * bmfCreate(const char *, l_int32)
- name: WebPEncodeRGB
  params:
  - name: in
    type: 'bool '
  - name: w
    type: int
  - name: h
    type: int
  - name: bps
    type: int
  - name: q
    type: float
  - name: out
    type: 'bool '
  return_type: size_t
  signature: size_t WebPEncodeRGB(const uint8_t *, int, int, int, float, uint8_t **)
- name: WebPEncodeBGRA
  params:
  - name: in
    type: 'bool '
  - name: w
    type: int
  - name: h
    type: int
  - name: bps
    type: int
  - name: q
    type: float
  - name: out
    type: 'bool '
  return_type: size_t
  signature: size_t WebPEncodeBGRA(const uint8_t *, int, int, int, float, uint8_t
    **)
- name: WebPDecode
  params:
  - name: data
    type: 'bool '
  - name: data_size
    type: size_t
  - name: config
    type: 'bool '
  return_type: int
  signature: VP8StatusCode WebPDecode(const uint8_t *, size_t, WebPDecoderConfig *)
- name: WebPDecodeBGRInto
  params:
  - name: data
    type: 'bool '
  - name: data_size
    type: size_t
  - name: output
    type: 'bool '
  - name: size
    type: size_t
  - name: stride
    type: int
  return_type: void
  signature: uint8_t * WebPDecodeBGRInto(const uint8_t *, size_t, uint8_t *, size_t,
    int)
- name: png_image_write_to_memory
  params:
  - name: image
    type: 'bool '
  - name: memory
    type: 'bool '
  - name: memory_bytes
    type: 'bool '
  - name: convert_to_8bit
    type: int
  - name: buffer
    type: 'bool '
  - name: row_stride
    type: int
  - name: colormap
    type: 'bool '
  return_type: int
  signature: int png_image_write_to_memory(png_imagep, void *, DW_TAG_restrict_typepng_alloc_size_t
    *, int, const void *, png_int_32, const void *)
- name: WebPDecodeBGRAInto
  params:
  - name: data
    type: 'bool '
  - name: data_size
    type: size_t
  - name: output
    type: 'bool '
  - name: size
    type: size_t
  - name: stride
    type: int
  return_type: void
  signature: uint8_t * WebPDecodeBGRAInto(const uint8_t *, size_t, uint8_t *, size_t,
    int)
- name: WebPDecodeYUVInto
  params:
  - name: data
    type: 'bool '
  - name: data_size
    type: size_t
  - name: luma
    type: 'bool '
  - name: luma_size
    type: size_t
  - name: luma_stride
    type: int
  - name: u
    type: 'bool '
  - name: u_size
    type: size_t
  - name: u_stride
    type: int
  - name: v
    type: 'bool '
  - name: v_size
    type: size_t
  - name: v_stride
    type: int
  return_type: void
  signature: uint8_t * WebPDecodeYUVInto(const uint8_t *, size_t, uint8_t *, size_t,
    int, uint8_t *, size_t, int, uint8_t *, size_t, int)
- name: WebPEncodeBGR
  params:
  - name: in
    type: 'bool '
  - name: w
    type: int
  - name: h
    type: int
  - name: bps
    type: int
  - name: q
    type: float
  - name: out
    type: 'bool '
  return_type: size_t
  signature: size_t WebPEncodeBGR(const uint8_t *, int, int, int, float, uint8_t **)
- name: WebPDecodeRGBA
  params:
  - name: data
    type: 'bool '
  - name: data_size
    type: size_t
  - name: width
    type: 'bool '
  - name: height
    type: 'bool '
  return_type: void
  signature: uint8_t * WebPDecodeRGBA(const uint8_t *, size_t, int *, int *)
language: c++
project: leptonica
target_name: colorfill_fuzzer
target_path: /src/leptonica/prog/fuzzing/colorfill_fuzzer.cc
