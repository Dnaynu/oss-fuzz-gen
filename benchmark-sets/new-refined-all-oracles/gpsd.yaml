functions:
- name: ais_binary_decode
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: size_t
  - name: ''
    type: 'bool '
  return_type: bool
  signature: bool ais_binary_decode(const struct gpsd_errout_t *, struct ais_t *,
    const unsigned char *, size_t, struct ais_type24_queue_t *)
- name: gpsd_open
  params:
  - name: ''
    type: 'bool '
  return_type: int
  signature: int gpsd_open(struct gps_device_t *)
- name: ntrip_open
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: size_t
  signature: socket_t ntrip_open(struct gps_device_t *, char *)
- name: gpsd_deactivate
  params:
  - name: ''
    type: 'bool '
  return_type: void
  signature: void gpsd_deactivate(struct gps_device_t *)
- name: ntrip_report
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void ntrip_report(struct gps_context_t *, struct gps_device_t *, struct
    gps_device_t *)
- name: netgnss_report
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void netgnss_report(struct gps_context_t *, struct gps_device_t *, struct
    gps_device_t *)
- name: gps_open
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: int
  signature: int gps_open(const char *, const char *, struct gps_data_t *)
- name: navcom_parse
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: size_t
  return_type: size_t
  signature: gps_mask_t navcom_parse(struct gps_device_t *, unsigned char *, size_t)
- name: garmintxt_parse
  params:
  - name: ''
    type: 'bool '
  return_type: size_t
  signature: gps_mask_t garmintxt_parse(struct gps_device_t *)
- name: netgnss_uri_open
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: size_t
  signature: gps_fd_t netgnss_uri_open(struct gps_device_t *, char *)
- name: garmin_ser_parse
  params:
  - name: ''
    type: 'bool '
  return_type: size_t
  signature: gps_mask_t garmin_ser_parse(struct gps_device_t *)
- name: gpsd_wrap
  params:
  - name: ''
    type: 'bool '
  return_type: void
  signature: void gpsd_wrap(struct gps_device_t *)
- name: rtcm2_unpack
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void rtcm2_unpack(struct gps_device_t *, struct rtcm2_t *, char *)
- name: gps_read
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: int
  return_type: int
  signature: int gps_read(struct gps_data_t *, char *, int)
- name: pps_thread_activate
  params:
  - name: ''
    type: 'bool '
  return_type: void
  signature: void pps_thread_activate(struct DW_TAG_volatile_typepps_thread_t *)
- name: gpsd_interpret_subframe_raw
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: int
  - name: ''
    type: int
  - name: ''
    type: int
  - name: ''
    type: 'bool '
  - name: ''
    type: int
  return_type: size_t
  signature: gps_mask_t gpsd_interpret_subframe_raw(struct gps_device_t *, unsigned
    int, unsigned int, unsigned int, uint32_t *, unsigned int)
- name: gpsd_next_hunt_setting
  params:
  - name: ''
    type: 'bool '
  return_type: bool
  signature: bool gpsd_next_hunt_setting(struct gps_device_t *)
- name: gpsd_serial_open
  params:
  - name: ''
    type: 'bool '
  return_type: int
  signature: int gpsd_serial_open(struct gps_device_t *)
- name: gpsd_set_speed
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: int
  - name: ''
    type: char
  - name: ''
    type: int
  return_type: void
  signature: void gpsd_set_speed(struct gps_device_t *, speed_t, char, unsigned int)
- name: gps_unpack
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: int
  signature: int gps_unpack(const char *, struct gps_data_t *)
- name: rtcm3_unpack
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: void rtcm3_unpack(const struct gps_context_t *, struct rtcm3_t *, const
    unsigned char *)
- name: dgpsip_open
  params:
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: size_t
  signature: socket_t dgpsip_open(struct gps_device_t *, const char *)
language: c
project: gpsd
target_name: FuzzJson
target_path: /src/gpsd/fuzzer/FuzzJson.c
