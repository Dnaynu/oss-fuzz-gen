functions:
- name: _ZN5boost15circular_bufferINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS5_IS7_EEE8allocateEm
  params:
  - name: this
    type: 'bool '
  - name: n
    type: size_t
  return_type: void
  signature: pointer boost::circular_buffer<std::__1::basic_string<char, std::__1::char_traits<char>,
    std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char,
    std::__1::char_traits<char>, std::__1::allocator<char> > > >::allocate(circular_buffer<std::__1::basic_string<char,
    std::__1::char_traits<char>, std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char,
    std::__1::char_traits<char>, std::__1::allocator<char> > > > *, size_type)
- name: _ZN5QTypeaSEPKc
  params:
  - name: this
    type: 'bool '
  - name: p
    type: 'bool '
  return_type: void
  signature: QType & QType::operator=(const char *)
- name: _ZNK5boost10wrapexceptINS_2io13too_many_argsEE5cloneEv
  params:
  - name: this
    type: 'bool '
  return_type: void
  signature: const clone_base * boost::wrapexcept<boost::io::too_many_args>::clone(const
    struct wrapexcept<std::length_error> *)
- name: _ZN6LoggerlsERFRNSt3__113basic_ostreamIcNS0_11char_traitsIcEEEES5_E
  params:
  - name: this
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: Logger & Logger::operator<<(DW_TAG_subroutine_typeInfinite loop &)
- name: _ZN5boost9algorithm14split_iteratorINSt3__111__wrap_iterIPKcEEE9incrementEv
  params:
  - name: this
    type: 'bool '
  return_type: void
  signature: void boost::algorithm::split_iterator<std::__1::__wrap_iter<char const*>
    >::increment(split_iterator<std::__1::__wrap_iter<const char *> > *)
- name: _ZN5boost15circular_bufferINSt3__15tupleIJ7DNSName5QTypeEEENS1_9allocatorIS5_EEE8allocateEm
  params:
  - name: this
    type: 'bool '
  - name: n
    type: size_t
  return_type: void
  signature: pointer boost::circular_buffer<std::__1::tuple<DNSName, QType>, std::__1::allocator<std::__1::tuple<DNSName,
    QType> > >::allocate(circular_buffer<std::__1::basic_string<char, std::__1::char_traits<char>,
    std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char,
    std::__1::char_traits<char>, std::__1::allocator<char> > > > *, size_type)
- name: _ZN5QTypeaSERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEE
  params:
  - name: this
    type: 'bool '
  - name: s
    type: 'bool '
  return_type: void
  signature: QType & QType::operator=(const string &)
- name: _ZN5boost15circular_bufferI13SComboAddressNSt3__19allocatorIS1_EEE8allocateEm
  params:
  - name: this
    type: 'bool '
  - name: n
    type: size_t
  return_type: void
  signature: pointer boost::circular_buffer<SComboAddress, std::__1::allocator<SComboAddress>
    >::allocate(circular_buffer<std::__1::basic_string<char, std::__1::char_traits<char>,
    std::__1::allocator<char> >, std::__1::allocator<std::__1::basic_string<char,
    std::__1::char_traits<char>, std::__1::allocator<char> > > > *, size_type)
- name: _ZN6LoggerlsERK7DNSName
  params:
  - name: this
    type: 'bool '
  - name: d
    type: 'bool '
  return_type: void
  signature: Logger & Logger::operator<<(const DNSName &)
- name: _ZN6LoggerlsERK12ComboAddress
  params:
  - name: this
    type: 'bool '
  - name: ca
    type: 'bool '
  return_type: void
  signature: Logger & Logger::operator<<(const DW_TAG_union_typeComboAddress &)
- name: _ZN6Logger3logERKNSt3__112basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS_7UrgencyE
  params:
  - name: this
    type: 'bool '
  - name: msg
    type: 'bool '
  - name: u
    type: int
  return_type: void
  signature: void Logger::log(const string &, DW_TAG_enumeration_typeUrgency)
- name: _ZN11NetmaskTreeIb7NetmaskEaSERKS1_
  params:
  - name: this
    type: 'bool '
  - name: rhs
    type: 'bool '
  return_type: void
  signature: NetmaskTree<bool, Netmask> & NetmaskTree<bool, Netmask>::operator=(const
    NetmaskTree<bool, Netmask> &)
- name: _ZNK5boost10wrapexceptISt12length_errorE5cloneEv
  params:
  - name: this
    type: 'bool '
  return_type: void
  signature: const clone_base * boost::wrapexcept<std::length_error>::clone(const
    struct wrapexcept<std::length_error> *)
- name: _ZNK5boost9function2INS_14iterator_rangeINSt3__111__wrap_iterIPKcEEEES6_S6_EclES6_S6_
  params:
  - name: this
    type: 'bool '
  - name: a0
    type: 'bool '
  - name: a1
    type: 'bool '
  return_type: void
  signature: result_type boost::function2<boost::iterator_range<std::__1::__wrap_iter<char
    const*> >, std::__1::__wrap_iter<char const*>, std::__1::__wrap_iter<char const*>
    >::operator()(const function2<boost::iterator_range<std::__1::__wrap_iter<const
    char *> >, std::__1::__wrap_iter<const char *>, std::__1::__wrap_iter<const char
    *> > *, __wrap_iter<const char *>, __wrap_iter<const char *>)
- name: _ZlsRNSt3__113basic_ostreamIcNS_11char_traitsIcEEEERK7DNSName
  params:
  - name: os
    type: 'bool '
  - name: d
    type: 'bool '
  return_type: void
  signature: ostream & operator<<(ostream &, const DNSName &)
- name: _ZNK5boost10wrapexceptINS_2io17bad_format_stringEE5cloneEv
  params:
  - name: this
    type: 'bool '
  return_type: void
  signature: const clone_base * boost::wrapexcept<boost::io::bad_format_string>::clone(const
    struct wrapexcept<std::length_error> *)
- name: _ZNK5boost10wrapexceptINS_2io12too_few_argsEE5cloneEv
  params:
  - name: this
    type: 'bool '
  return_type: void
  signature: const clone_base * boost::wrapexcept<boost::io::too_few_args>::clone(const
    struct wrapexcept<std::length_error> *)
language: c++
project: powerdns
target_name: fuzz_target_proxyprotocol
target_path: /src/pdns/pdns/fuzz_proxyprotocol.cc
