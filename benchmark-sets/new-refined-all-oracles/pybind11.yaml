functions:
- name: _ZN8pybind116detail17make_new_instanceEP11_typeobject
  params:
  - name: type
    type: 'bool '
  return_type: void
  signature: PyObject * pybind11::detail::make_new_instance(PyTypeObject *)
- name: _ZNK8pybind1117error_already_set4whatEv
  params:
  - name: this
    type: 'bool '
  return_type: void
  signature: const char * pybind11::error_already_set::what()
- name: _ZN8pybind1112cpp_function18initialize_genericEONSt3__110unique_ptrINS_6detail15function_recordENS0_33InitializingFunctionRecordDeleterEEEPKcPKPKSt9type_infom
  params:
  - name: this
    type: 'bool '
  - name: unique_rec
    type: 'bool '
  - name: text
    type: 'bool '
  - name: types
    type: 'bool '
  - name: args
    type: size_t
  return_type: void
  signature: void pybind11::cpp_function::initialize_generic(DW_TAG_rvalue_reference_typeunique_function_record,
    const char *, const const type_info **, size_t)
- name: _ZZN8pybind1112cpp_function10initializeIZNS_6detail23all_type_info_get_cacheEP11_typeobjectEUlNS_6handleEE_vJS5_EJEEEvOT_PFT0_DpT1_EDpRKT2_ENKUlRNS2_13function_callEE_clESJ_
  params:
  - name: this
    type: 'bool '
  - name: call
    type: 'bool '
  return_type: void
  signature: handle pybind11::cpp_function::initialize<pybind11::detail::operator()(const
    void *, struct function_call &)
- name: _ZN8pybind116detail19loader_life_supportD2Ev
  params:
  - name: this
    type: 'bool '
  return_type: void
  signature: void pybind11::detail::loader_life_support::~~loader_life_support()
- name: _ZN8pybind116detail19get_local_type_infoERKNSt3__110type_indexE
  params:
  - name: tp
    type: 'bool '
  return_type: void
  signature: struct type_info * pybind11::detail::get_local_type_info(const type_index
    &)
- name: _ZN8pybind116detail13get_type_infoERKNSt3__110type_indexEb
  params:
  - name: tp
    type: 'bool '
  - name: throw_if_missing
    type: bool
  return_type: void
  signature: struct type_info * pybind11::detail::get_type_info(const type_index &,
    bool)
- name: _ZN8pybind116detail8instance15allocate_layoutEv
  params:
  - name: this
    type: 'bool '
  return_type: void
  signature: void pybind11::detail::instance::allocate_layout(struct instance *)
- name: _ZN8pybind116detail23all_type_info_get_cacheEP11_typeobject
  params:
  - name: type
    type: 'bool '
  return_type: void
  signature: struct pair<std::__1::__hash_map_iterator<std::__1::__hash_iterator<std::__1::__hash_node<std::__1::__hash_value_type<_typeobject
    *, std::__1::vector<pybind11::detail::type_info *, std::__1::allocator<pybind11::detail::type_info
    *> > >, void *> *> >, bool> pybind11::detail::all_type_info_get_cache(PyTypeObject
    *)
- name: _ZN8pybind116detail22all_type_info_populateEP11_typeobjectRNSt3__16vectorIPNS0_9type_infoENS3_9allocatorIS6_EEEE
  params:
  - name: t
    type: 'bool '
  - name: bases
    type: 'bool '
  return_type: void
  signature: void pybind11::detail::all_type_info_populate(PyTypeObject *, vector<pybind11::detail::type_info
    *, std::__1::allocator<pybind11::detail::type_info *> > &)
- name: _ZZ21pybind11_meta_deallocENKUlRN8pybind116detail9internalsEE_clES2_
  params:
  - name: this
    type: 'bool '
  - name: internals
    type: 'bool '
  return_type: void
  signature: void pybind11_meta_dealloc::operator()(const void *, struct internals
    &)
- name: pybind11_object_new
  params:
  - name: type
    type: 'bool '
  - name: ''
    type: 'bool '
  - name: ''
    type: 'bool '
  return_type: void
  signature: PyObject * pybind11_object_new(PyTypeObject *, PyObject *, PyObject *)
- name: _ZN8pybind116detail19deregister_instanceEPNS0_8instanceEPvPKNS0_9type_infoE
  params:
  - name: self
    type: 'bool '
  - name: valptr
    type: 'bool '
  - name: tinfo
    type: 'bool '
  return_type: bool
  signature: bool pybind11::detail::deregister_instance(struct instance *, void *,
    const struct type_info *)
- name: _ZN8pybind116detail13get_type_infoEP11_typeobject
  params:
  - name: type
    type: 'bool '
  return_type: void
  signature: struct type_info * pybind11::detail::get_type_info(PyTypeObject *)
- name: pybind11_meta_call
  params:
  - name: type
    type: 'bool '
  - name: args
    type: 'bool '
  - name: kwargs
    type: 'bool '
  return_type: void
  signature: PyObject * pybind11_meta_call(PyObject *, PyObject *, PyObject *)
- name: pybind11_meta_dealloc
  params:
  - name: obj
    type: 'bool '
  return_type: void
  signature: void pybind11_meta_dealloc(PyObject *)
- name: _ZN8pybind116detail18values_and_holdersC2EPNS0_8instanceE
  params:
  - name: this
    type: 'bool '
  - name: inst
    type: 'bool '
  return_type: void
  signature: void pybind11::detail::values_and_holders::values_and_holders(struct
    values_and_holders *, struct instance *)
- name: _ZN8pybind116detail13all_type_infoEP11_typeobject
  params:
  - name: type
    type: 'bool '
  return_type: void
  signature: const vector<pybind11::detail::type_info *, std::__1::allocator<pybind11::detail::type_info
    *> > & pybind11::detail::all_type_info(PyTypeObject *)
- name: _ZZN8pybind116detail24try_translate_exceptionsEvENKUlRNS0_9internalsEE_clES2_
  params:
  - name: this
    type: 'bool '
  - name: internals
    type: 'bool '
  return_type: bool
  signature: bool pybind11::detail::operator()(const void *, struct internals &)
- name: _ZN8pybind116detail19loader_life_supportC2Ev
  params:
  - name: this
    type: 'bool '
  return_type: void
  signature: void pybind11::detail::loader_life_support::loader_life_support()
- name: _ZN8pybind116detail18values_and_holdersC2EP7_object
  params:
  - name: this
    type: 'bool '
  - name: obj
    type: 'bool '
  return_type: void
  signature: void pybind11::detail::values_and_holders::values_and_holders(struct
    values_and_holders *, PyObject *)
language: c++
project: pybind11
target_name: pybind_fuzzer
target_path: /src/pybind_fuzzer.cc
